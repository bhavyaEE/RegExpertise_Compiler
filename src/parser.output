Terminals unused in grammar

    COLON


State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: root_program

    2 root_program: external_declaration
    3             | root_program external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement

    8 initialisation_declarator: declarator
    9                          | NAME T_ASSIGN assignment_expression

   10 declaration_list: declaration
   11                 | declaration_list declaration

   12 declarator: NAME
   13           | NAME SQU_LBRACKET add_expression SQU_RBRACKET

   14 declaration: type_specifier SEMICOLON
   15            | type_specifier initialisation_declarator SEMICOLON

   16 parameter_declaration: type_specifier declarator

   17 parameter_list: parameter_declaration
   18               | parameter_list COMMA parameter_declaration

   19 primary_expression: NUMBER
   20                   | NAME
   21                   | NAME SQU_LBRACKET expression SQU_RBRACKET
   22                   | T_LBRACKET expression T_RBRACKET

   23 postfix_expression: primary_expression
   24                   | postfix_expression INC_OP

   25 add_expression: multiply_expression
   26               | add_expression T_PLUS multiply_expression
   27               | add_expression T_MINUS multiply_expression

   28 multiply_expression: postfix_expression
   29                    | multiply_expression T_TIMES postfix_expression
   30                    | multiply_expression T_DIVIDE postfix_expression

   31 shift_expression: add_expression
   32                 | shift_expression T_LEFT_SHIFT add_expression
   33                 | shift_expression T_RIGHT_SHIFT add_expression

   34 compare_expression: shift_expression
   35                   | compare_expression T_LESSTHAN shift_expression
   36                   | compare_expression T_LESS_EQUAL shift_expression
   37                   | compare_expression T_GREATERTHAN shift_expression
   38                   | compare_expression T_GREATER_EQUAL shift_expression

   39 equal_expression: compare_expression
   40                 | equal_expression T_EQUAL compare_expression
   41                 | equal_expression T_NOT_EQUAL compare_expression

   42 bitwise_expression: equal_expression
   43                   | bitwise_expression T_BIT_AND equal_expression
   44                   | bitwise_expression T_BIT_OR equal_expression
   45                   | bitwise_expression T_BIT_XOR equal_expression

   46 logical_expression: bitwise_expression
   47                   | logical_expression T_LOGICAL_AND bitwise_expression
   48                   | logical_expression T_LOGICAL_OR bitwise_expression

   49 assignment_expression: logical_expression
   50                      | postfix_expression T_ASSIGN assignment_expression

   51 expression: assignment_expression

   52 statement: jump_statement
   53          | compound_statement
   54          | expression_statement
   55          | condition_statement
   56          | iteration_statement

   57 statement_list: statement
   58               | statement_list statement

   59 compound_statement: CUR_LBRACKET CUR_RBRACKET
   60                   | CUR_LBRACKET statement_list CUR_RBRACKET
   61                   | CUR_LBRACKET declaration_list CUR_RBRACKET
   62                   | CUR_LBRACKET declaration_list statement_list CUR_RBRACKET

   63 jump_statement: T_RETURN SEMICOLON
   64               | T_RETURN expression SEMICOLON

   65 expression_statement: expression SEMICOLON

   66 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement
   67                    | T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement

   68 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement
   69                    | T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET statement
   70                    | T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement

   71 type_specifier: T_INT
   72               | T_UNSIGNED


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_ASSIGN (258) 9 50
    T_TIMES (259) 29
    T_DIVIDE (260) 30
    T_PLUS (261) 26
    T_MINUS (262) 27
    T_BIT_AND (263) 43
    T_BIT_OR (264) 44
    T_BIT_XOR (265) 45
    T_LOGICAL_OR (266) 48
    T_LOGICAL_AND (267) 47
    T_RIGHT_SHIFT (268) 33
    T_LEFT_SHIFT (269) 32
    T_LBRACKET (270) 6 7 22 66 67 68 69 70
    T_RBRACKET (271) 6 7 22 66 67 68 69 70
    CUR_LBRACKET (272) 59 60 61 62
    CUR_RBRACKET (273) 59 60 61 62
    SQU_LBRACKET (274) 13 21
    SQU_RBRACKET (275) 13 21
    COLON (276)
    SEMICOLON (277) 14 15 63 64 65
    COMMA (278) 18
    T_LESSTHAN (279) 35
    T_GREATERTHAN (280) 37
    T_LESS_EQUAL (281) 36
    T_GREATER_EQUAL (282) 38
    T_EQUAL (283) 40
    T_NOT_EQUAL (284) 41
    T_INT (285) 71
    T_UNSIGNED (286) 72
    T_IF (287) 66 67
    T_ELSE (288) 67
    T_WHILE (289) 68
    T_RETURN (290) 63 64
    T_FOR (291) 69 70
    INC_OP (292) 24
    NAME <string> (293) 6 7 9 12 13 20 21
    NUMBER <number> (294) 19


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    ROOT (41)
        on left: 1
        on right: 0
    root_program <NodePtr> (42)
        on left: 2 3
        on right: 1 3
    external_declaration <NodePtr> (43)
        on left: 4 5
        on right: 2 3
    function_definition <NodePtr> (44)
        on left: 6 7
        on right: 4
    initialisation_declarator <NodePtr> (45)
        on left: 8 9
        on right: 15
    declaration_list <NodeVectorPtr> (46)
        on left: 10 11
        on right: 11 61 62
    declarator <NodePtr> (47)
        on left: 12 13
        on right: 8 16
    declaration <NodePtr> (48)
        on left: 14 15
        on right: 5 10 11
    parameter_declaration <NodePtr> (49)
        on left: 16
        on right: 17 18
    parameter_list <NodeVectorPtr> (50)
        on left: 17 18
        on right: 7 18
    primary_expression <NodePtr> (51)
        on left: 19 20 21 22
        on right: 23
    postfix_expression <NodePtr> (52)
        on left: 23 24
        on right: 24 28 29 30 50
    add_expression <NodePtr> (53)
        on left: 25 26 27
        on right: 13 26 27 31 32 33
    multiply_expression <NodePtr> (54)
        on left: 28 29 30
        on right: 25 26 27 29 30
    shift_expression <NodePtr> (55)
        on left: 31 32 33
        on right: 32 33 34 35 36 37 38
    compare_expression <NodePtr> (56)
        on left: 34 35 36 37 38
        on right: 35 36 37 38 39 40 41
    equal_expression <NodePtr> (57)
        on left: 39 40 41
        on right: 40 41 42 43 44 45
    bitwise_expression <NodePtr> (58)
        on left: 42 43 44 45
        on right: 43 44 45 46 47 48
    logical_expression <NodePtr> (59)
        on left: 46 47 48
        on right: 47 48 49
    assignment_expression <NodePtr> (60)
        on left: 49 50
        on right: 9 50 51
    expression <NodePtr> (61)
        on left: 51
        on right: 21 22 64 65 66 67 68 70
    statement <NodePtr> (62)
        on left: 52 53 54 55 56
        on right: 57 58 66 67 68 69 70
    statement_list <NodeVectorPtr> (63)
        on left: 57 58
        on right: 58 60 62
    compound_statement <NodePtr> (64)
        on left: 59 60 61 62
        on right: 6 7 53
    jump_statement <NodePtr> (65)
        on left: 63 64
        on right: 52
    expression_statement <NodePtr> (66)
        on left: 65
        on right: 54 69 70
    condition_statement <NodePtr> (67)
        on left: 66 67
        on right: 55
    iteration_statement <NodePtr> (68)
        on left: 68 69 70
        on right: 56
    type_specifier <string> (69)
        on left: 71 72
        on right: 6 7 14 15 16


State 0

    0 $accept: . ROOT $end

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    ROOT                  go to state 3
    root_program          go to state 4
    external_declaration  go to state 5
    function_definition   go to state 6
    declaration           go to state 7
    type_specifier        go to state 8


State 1

   71 type_specifier: T_INT .

    $default  reduce using rule 71 (type_specifier)


State 2

   72 type_specifier: T_UNSIGNED .

    $default  reduce using rule 72 (type_specifier)


State 3

    0 $accept: ROOT . $end

    $end  shift, and go to state 9


State 4

    1 ROOT: root_program .
    3 root_program: root_program . external_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    $default  reduce using rule 1 (ROOT)

    external_declaration  go to state 10
    function_definition   go to state 6
    declaration           go to state 7
    type_specifier        go to state 8


State 5

    2 root_program: external_declaration .

    $default  reduce using rule 2 (root_program)


State 6

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 7

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


State 8

    6 function_definition: type_specifier . NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier . NAME T_LBRACKET parameter_list T_RBRACKET compound_statement
   14 declaration: type_specifier . SEMICOLON
   15            | type_specifier . initialisation_declarator SEMICOLON

    SEMICOLON  shift, and go to state 11
    NAME       shift, and go to state 12

    initialisation_declarator  go to state 13
    declarator                 go to state 14


State 9

    0 $accept: ROOT $end .

    $default  accept


State 10

    3 root_program: root_program external_declaration .

    $default  reduce using rule 3 (root_program)


State 11

   14 declaration: type_specifier SEMICOLON .

    $default  reduce using rule 14 (declaration)


State 12

    6 function_definition: type_specifier NAME . T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME . T_LBRACKET parameter_list T_RBRACKET compound_statement
    9 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12 declarator: NAME .
   13           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET

    T_ASSIGN      shift, and go to state 15
    T_LBRACKET    shift, and go to state 16
    SQU_LBRACKET  shift, and go to state 17

    $default  reduce using rule 12 (declarator)


State 13

   15 declaration: type_specifier initialisation_declarator . SEMICOLON

    SEMICOLON  shift, and go to state 18


State 14

    8 initialisation_declarator: declarator .

    $default  reduce using rule 8 (initialisation_declarator)


State 15

    9 initialisation_declarator: NAME T_ASSIGN . assignment_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 31


State 16

    6 function_definition: type_specifier NAME T_LBRACKET . T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET . parameter_list T_RBRACKET compound_statement

    T_RBRACKET  shift, and go to state 32
    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    parameter_declaration  go to state 33
    parameter_list         go to state 34
    type_specifier         go to state 35


State 17

   13 declarator: NAME SQU_LBRACKET . add_expression SQU_RBRACKET

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 37
    multiply_expression  go to state 25


State 18

   15 declaration: type_specifier initialisation_declarator SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 19

   22 primary_expression: T_LBRACKET . expression T_RBRACKET

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 39


State 20

   20 primary_expression: NAME .
   21                   | NAME . SQU_LBRACKET expression SQU_RBRACKET

    SQU_LBRACKET  shift, and go to state 40

    $default  reduce using rule 20 (primary_expression)


State 21

   19 primary_expression: NUMBER .

    $default  reduce using rule 19 (primary_expression)


State 22

   23 postfix_expression: primary_expression .

    $default  reduce using rule 23 (postfix_expression)


State 23

   24 postfix_expression: postfix_expression . INC_OP
   28 multiply_expression: postfix_expression .
   50 assignment_expression: postfix_expression . T_ASSIGN assignment_expression

    T_ASSIGN  shift, and go to state 41
    INC_OP    shift, and go to state 42

    $default  reduce using rule 28 (multiply_expression)


State 24

   26 add_expression: add_expression . T_PLUS multiply_expression
   27               | add_expression . T_MINUS multiply_expression
   31 shift_expression: add_expression .

    T_PLUS   shift, and go to state 43
    T_MINUS  shift, and go to state 44

    $default  reduce using rule 31 (shift_expression)


State 25

   25 add_expression: multiply_expression .
   29 multiply_expression: multiply_expression . T_TIMES postfix_expression
   30                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 45
    T_DIVIDE  shift, and go to state 46

    $default  reduce using rule 25 (add_expression)


State 26

   32 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   33                 | shift_expression . T_RIGHT_SHIFT add_expression
   34 compare_expression: shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 47
    T_LEFT_SHIFT   shift, and go to state 48

    $default  reduce using rule 34 (compare_expression)


State 27

   35 compare_expression: compare_expression . T_LESSTHAN shift_expression
   36                   | compare_expression . T_LESS_EQUAL shift_expression
   37                   | compare_expression . T_GREATERTHAN shift_expression
   38                   | compare_expression . T_GREATER_EQUAL shift_expression
   39 equal_expression: compare_expression .

    T_LESSTHAN       shift, and go to state 49
    T_GREATERTHAN    shift, and go to state 50
    T_LESS_EQUAL     shift, and go to state 51
    T_GREATER_EQUAL  shift, and go to state 52

    $default  reduce using rule 39 (equal_expression)


State 28

   40 equal_expression: equal_expression . T_EQUAL compare_expression
   41                 | equal_expression . T_NOT_EQUAL compare_expression
   42 bitwise_expression: equal_expression .

    T_EQUAL      shift, and go to state 53
    T_NOT_EQUAL  shift, and go to state 54

    $default  reduce using rule 42 (bitwise_expression)


State 29

   43 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   44                   | bitwise_expression . T_BIT_OR equal_expression
   45                   | bitwise_expression . T_BIT_XOR equal_expression
   46 logical_expression: bitwise_expression .

    T_BIT_AND  shift, and go to state 55
    T_BIT_OR   shift, and go to state 56
    T_BIT_XOR  shift, and go to state 57

    $default  reduce using rule 46 (logical_expression)


State 30

   47 logical_expression: logical_expression . T_LOGICAL_AND bitwise_expression
   48                   | logical_expression . T_LOGICAL_OR bitwise_expression
   49 assignment_expression: logical_expression .

    T_LOGICAL_OR   shift, and go to state 58
    T_LOGICAL_AND  shift, and go to state 59

    $default  reduce using rule 49 (assignment_expression)


State 31

    9 initialisation_declarator: NAME T_ASSIGN assignment_expression .

    $default  reduce using rule 9 (initialisation_declarator)


State 32

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET . compound_statement

    CUR_LBRACKET  shift, and go to state 60

    compound_statement  go to state 61


State 33

   17 parameter_list: parameter_declaration .

    $default  reduce using rule 17 (parameter_list)


State 34

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list . T_RBRACKET compound_statement
   18 parameter_list: parameter_list . COMMA parameter_declaration

    T_RBRACKET  shift, and go to state 62
    COMMA       shift, and go to state 63


State 35

   16 parameter_declaration: type_specifier . declarator

    NAME  shift, and go to state 64

    declarator  go to state 65


State 36

   24 postfix_expression: postfix_expression . INC_OP
   28 multiply_expression: postfix_expression .

    INC_OP  shift, and go to state 42

    $default  reduce using rule 28 (multiply_expression)


State 37

   13 declarator: NAME SQU_LBRACKET add_expression . SQU_RBRACKET
   26 add_expression: add_expression . T_PLUS multiply_expression
   27               | add_expression . T_MINUS multiply_expression

    T_PLUS        shift, and go to state 43
    T_MINUS       shift, and go to state 44
    SQU_RBRACKET  shift, and go to state 66


State 38

   51 expression: assignment_expression .

    $default  reduce using rule 51 (expression)


State 39

   22 primary_expression: T_LBRACKET expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 67


State 40

   21 primary_expression: NAME SQU_LBRACKET . expression SQU_RBRACKET

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 68


State 41

   50 assignment_expression: postfix_expression T_ASSIGN . assignment_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 69


State 42

   24 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 24 (postfix_expression)


State 43

   26 add_expression: add_expression T_PLUS . multiply_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    multiply_expression  go to state 70


State 44

   27 add_expression: add_expression T_MINUS . multiply_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    multiply_expression  go to state 71


State 45

   29 multiply_expression: multiply_expression T_TIMES . postfix_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression  go to state 22
    postfix_expression  go to state 72


State 46

   30 multiply_expression: multiply_expression T_DIVIDE . postfix_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression  go to state 22
    postfix_expression  go to state 73


State 47

   33 shift_expression: shift_expression T_RIGHT_SHIFT . add_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 74
    multiply_expression  go to state 25


State 48

   32 shift_expression: shift_expression T_LEFT_SHIFT . add_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 75
    multiply_expression  go to state 25


State 49

   35 compare_expression: compare_expression T_LESSTHAN . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 76


State 50

   37 compare_expression: compare_expression T_GREATERTHAN . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 77


State 51

   36 compare_expression: compare_expression T_LESS_EQUAL . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 78


State 52

   38 compare_expression: compare_expression T_GREATER_EQUAL . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 79


State 53

   40 equal_expression: equal_expression T_EQUAL . compare_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 80


State 54

   41 equal_expression: equal_expression T_NOT_EQUAL . compare_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 81


State 55

   43 bitwise_expression: bitwise_expression T_BIT_AND . equal_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 82


State 56

   44 bitwise_expression: bitwise_expression T_BIT_OR . equal_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 83


State 57

   45 bitwise_expression: bitwise_expression T_BIT_XOR . equal_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 84


State 58

   48 logical_expression: logical_expression T_LOGICAL_OR . bitwise_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 28
    bitwise_expression   go to state 85


State 59

   47 logical_expression: logical_expression T_LOGICAL_AND . bitwise_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 28
    bitwise_expression   go to state 86


State 60

   59 compound_statement: CUR_LBRACKET . CUR_RBRACKET
   60                   | CUR_LBRACKET . statement_list CUR_RBRACKET
   61                   | CUR_LBRACKET . declaration_list CUR_RBRACKET
   62                   | CUR_LBRACKET . declaration_list statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    CUR_RBRACKET  shift, and go to state 87
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    declaration_list       go to state 92
    declaration            go to state 93
    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 95
    statement_list         go to state 96
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101
    type_specifier         go to state 102


State 61

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement .

    $default  reduce using rule 6 (function_definition)


State 62

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET . compound_statement

    CUR_LBRACKET  shift, and go to state 60

    compound_statement  go to state 103


State 63

   18 parameter_list: parameter_list COMMA . parameter_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    parameter_declaration  go to state 104
    type_specifier         go to state 35


State 64

   12 declarator: NAME .
   13           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET

    SQU_LBRACKET  shift, and go to state 17

    $default  reduce using rule 12 (declarator)


State 65

   16 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 16 (parameter_declaration)


State 66

   13 declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET .

    $default  reduce using rule 13 (declarator)


State 67

   22 primary_expression: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 22 (primary_expression)


State 68

   21 primary_expression: NAME SQU_LBRACKET expression . SQU_RBRACKET

    SQU_RBRACKET  shift, and go to state 105


State 69

   50 assignment_expression: postfix_expression T_ASSIGN assignment_expression .

    $default  reduce using rule 50 (assignment_expression)


State 70

   26 add_expression: add_expression T_PLUS multiply_expression .
   29 multiply_expression: multiply_expression . T_TIMES postfix_expression
   30                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 45
    T_DIVIDE  shift, and go to state 46

    $default  reduce using rule 26 (add_expression)


State 71

   27 add_expression: add_expression T_MINUS multiply_expression .
   29 multiply_expression: multiply_expression . T_TIMES postfix_expression
   30                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 45
    T_DIVIDE  shift, and go to state 46

    $default  reduce using rule 27 (add_expression)


State 72

   24 postfix_expression: postfix_expression . INC_OP
   29 multiply_expression: multiply_expression T_TIMES postfix_expression .

    INC_OP  shift, and go to state 42

    $default  reduce using rule 29 (multiply_expression)


State 73

   24 postfix_expression: postfix_expression . INC_OP
   30 multiply_expression: multiply_expression T_DIVIDE postfix_expression .

    INC_OP  shift, and go to state 42

    $default  reduce using rule 30 (multiply_expression)


State 74

   26 add_expression: add_expression . T_PLUS multiply_expression
   27               | add_expression . T_MINUS multiply_expression
   33 shift_expression: shift_expression T_RIGHT_SHIFT add_expression .

    T_PLUS   shift, and go to state 43
    T_MINUS  shift, and go to state 44

    $default  reduce using rule 33 (shift_expression)


State 75

   26 add_expression: add_expression . T_PLUS multiply_expression
   27               | add_expression . T_MINUS multiply_expression
   32 shift_expression: shift_expression T_LEFT_SHIFT add_expression .

    T_PLUS   shift, and go to state 43
    T_MINUS  shift, and go to state 44

    $default  reduce using rule 32 (shift_expression)


State 76

   32 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   33                 | shift_expression . T_RIGHT_SHIFT add_expression
   35 compare_expression: compare_expression T_LESSTHAN shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 47
    T_LEFT_SHIFT   shift, and go to state 48

    $default  reduce using rule 35 (compare_expression)


State 77

   32 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   33                 | shift_expression . T_RIGHT_SHIFT add_expression
   37 compare_expression: compare_expression T_GREATERTHAN shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 47
    T_LEFT_SHIFT   shift, and go to state 48

    $default  reduce using rule 37 (compare_expression)


State 78

   32 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   33                 | shift_expression . T_RIGHT_SHIFT add_expression
   36 compare_expression: compare_expression T_LESS_EQUAL shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 47
    T_LEFT_SHIFT   shift, and go to state 48

    $default  reduce using rule 36 (compare_expression)


State 79

   32 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   33                 | shift_expression . T_RIGHT_SHIFT add_expression
   38 compare_expression: compare_expression T_GREATER_EQUAL shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 47
    T_LEFT_SHIFT   shift, and go to state 48

    $default  reduce using rule 38 (compare_expression)


State 80

   35 compare_expression: compare_expression . T_LESSTHAN shift_expression
   36                   | compare_expression . T_LESS_EQUAL shift_expression
   37                   | compare_expression . T_GREATERTHAN shift_expression
   38                   | compare_expression . T_GREATER_EQUAL shift_expression
   40 equal_expression: equal_expression T_EQUAL compare_expression .

    T_LESSTHAN       shift, and go to state 49
    T_GREATERTHAN    shift, and go to state 50
    T_LESS_EQUAL     shift, and go to state 51
    T_GREATER_EQUAL  shift, and go to state 52

    $default  reduce using rule 40 (equal_expression)


State 81

   35 compare_expression: compare_expression . T_LESSTHAN shift_expression
   36                   | compare_expression . T_LESS_EQUAL shift_expression
   37                   | compare_expression . T_GREATERTHAN shift_expression
   38                   | compare_expression . T_GREATER_EQUAL shift_expression
   41 equal_expression: equal_expression T_NOT_EQUAL compare_expression .

    T_LESSTHAN       shift, and go to state 49
    T_GREATERTHAN    shift, and go to state 50
    T_LESS_EQUAL     shift, and go to state 51
    T_GREATER_EQUAL  shift, and go to state 52

    $default  reduce using rule 41 (equal_expression)


State 82

   40 equal_expression: equal_expression . T_EQUAL compare_expression
   41                 | equal_expression . T_NOT_EQUAL compare_expression
   43 bitwise_expression: bitwise_expression T_BIT_AND equal_expression .

    T_EQUAL      shift, and go to state 53
    T_NOT_EQUAL  shift, and go to state 54

    $default  reduce using rule 43 (bitwise_expression)


State 83

   40 equal_expression: equal_expression . T_EQUAL compare_expression
   41                 | equal_expression . T_NOT_EQUAL compare_expression
   44 bitwise_expression: bitwise_expression T_BIT_OR equal_expression .

    T_EQUAL      shift, and go to state 53
    T_NOT_EQUAL  shift, and go to state 54

    $default  reduce using rule 44 (bitwise_expression)


State 84

   40 equal_expression: equal_expression . T_EQUAL compare_expression
   41                 | equal_expression . T_NOT_EQUAL compare_expression
   45 bitwise_expression: bitwise_expression T_BIT_XOR equal_expression .

    T_EQUAL      shift, and go to state 53
    T_NOT_EQUAL  shift, and go to state 54

    $default  reduce using rule 45 (bitwise_expression)


State 85

   43 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   44                   | bitwise_expression . T_BIT_OR equal_expression
   45                   | bitwise_expression . T_BIT_XOR equal_expression
   48 logical_expression: logical_expression T_LOGICAL_OR bitwise_expression .

    T_BIT_AND  shift, and go to state 55
    T_BIT_OR   shift, and go to state 56
    T_BIT_XOR  shift, and go to state 57

    $default  reduce using rule 48 (logical_expression)


State 86

   43 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   44                   | bitwise_expression . T_BIT_OR equal_expression
   45                   | bitwise_expression . T_BIT_XOR equal_expression
   47 logical_expression: logical_expression T_LOGICAL_AND bitwise_expression .

    T_BIT_AND  shift, and go to state 55
    T_BIT_OR   shift, and go to state 56
    T_BIT_XOR  shift, and go to state 57

    $default  reduce using rule 47 (logical_expression)


State 87

   59 compound_statement: CUR_LBRACKET CUR_RBRACKET .

    $default  reduce using rule 59 (compound_statement)


State 88

   66 condition_statement: T_IF . T_LBRACKET expression T_RBRACKET statement
   67                    | T_IF . T_LBRACKET expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 106


State 89

   68 iteration_statement: T_WHILE . T_LBRACKET expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 107


State 90

   63 jump_statement: T_RETURN . SEMICOLON
   64               | T_RETURN . expression SEMICOLON

    T_LBRACKET  shift, and go to state 19
    SEMICOLON   shift, and go to state 108
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 109


State 91

   69 iteration_statement: T_FOR . T_LBRACKET expression_statement expression_statement T_RBRACKET statement
   70                    | T_FOR . T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 110


State 92

   11 declaration_list: declaration_list . declaration
   61 compound_statement: CUR_LBRACKET declaration_list . CUR_RBRACKET
   62                   | CUR_LBRACKET declaration_list . statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    CUR_RBRACKET  shift, and go to state 111
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    declaration            go to state 112
    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 95
    statement_list         go to state 113
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101
    type_specifier         go to state 102


State 93

   10 declaration_list: declaration .

    $default  reduce using rule 10 (declaration_list)


State 94

   65 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 95

   57 statement_list: statement .

    $default  reduce using rule 57 (statement_list)


State 96

   58 statement_list: statement_list . statement
   60 compound_statement: CUR_LBRACKET statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    CUR_RBRACKET  shift, and go to state 115
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 116
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101


State 97

   53 statement: compound_statement .

    $default  reduce using rule 53 (statement)


State 98

   52 statement: jump_statement .

    $default  reduce using rule 52 (statement)


State 99

   54 statement: expression_statement .

    $default  reduce using rule 54 (statement)


State 100

   55 statement: condition_statement .

    $default  reduce using rule 55 (statement)


State 101

   56 statement: iteration_statement .

    $default  reduce using rule 56 (statement)


State 102

   14 declaration: type_specifier . SEMICOLON
   15            | type_specifier . initialisation_declarator SEMICOLON

    SEMICOLON  shift, and go to state 11
    NAME       shift, and go to state 117

    initialisation_declarator  go to state 13
    declarator                 go to state 14


State 103

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement .

    $default  reduce using rule 7 (function_definition)


State 104

   18 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 18 (parameter_list)


State 105

   21 primary_expression: NAME SQU_LBRACKET expression SQU_RBRACKET .

    $default  reduce using rule 21 (primary_expression)


State 106

   66 condition_statement: T_IF T_LBRACKET . expression T_RBRACKET statement
   67                    | T_IF T_LBRACKET . expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 118


State 107

   68 iteration_statement: T_WHILE T_LBRACKET . expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 119


State 108

   63 jump_statement: T_RETURN SEMICOLON .

    $default  reduce using rule 63 (jump_statement)


State 109

   64 jump_statement: T_RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 120


State 110

   69 iteration_statement: T_FOR T_LBRACKET . expression_statement expression_statement T_RBRACKET statement
   70                    | T_FOR T_LBRACKET . expression_statement expression_statement expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    expression_statement   go to state 121


State 111

   61 compound_statement: CUR_LBRACKET declaration_list CUR_RBRACKET .

    $default  reduce using rule 61 (compound_statement)


State 112

   11 declaration_list: declaration_list declaration .

    $default  reduce using rule 11 (declaration_list)


State 113

   58 statement_list: statement_list . statement
   62 compound_statement: CUR_LBRACKET declaration_list statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    CUR_RBRACKET  shift, and go to state 122
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 116
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101


State 114

   65 expression_statement: expression SEMICOLON .

    $default  reduce using rule 65 (expression_statement)


State 115

   60 compound_statement: CUR_LBRACKET statement_list CUR_RBRACKET .

    $default  reduce using rule 60 (compound_statement)


State 116

   58 statement_list: statement_list statement .

    $default  reduce using rule 58 (statement_list)


State 117

    9 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12 declarator: NAME .
   13           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET

    T_ASSIGN      shift, and go to state 15
    SQU_LBRACKET  shift, and go to state 17

    $default  reduce using rule 12 (declarator)


State 118

   66 condition_statement: T_IF T_LBRACKET expression . T_RBRACKET statement
   67                    | T_IF T_LBRACKET expression . T_RBRACKET statement T_ELSE statement

    T_RBRACKET  shift, and go to state 123


State 119

   68 iteration_statement: T_WHILE T_LBRACKET expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 124


State 120

   64 jump_statement: T_RETURN expression SEMICOLON .

    $default  reduce using rule 64 (jump_statement)


State 121

   69 iteration_statement: T_FOR T_LBRACKET expression_statement . expression_statement T_RBRACKET statement
   70                    | T_FOR T_LBRACKET expression_statement . expression_statement expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    expression_statement   go to state 125


State 122

   62 compound_statement: CUR_LBRACKET declaration_list statement_list CUR_RBRACKET .

    $default  reduce using rule 62 (compound_statement)


State 123

   66 condition_statement: T_IF T_LBRACKET expression T_RBRACKET . statement
   67                    | T_IF T_LBRACKET expression T_RBRACKET . statement T_ELSE statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 126
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101


State 124

   68 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 127
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101


State 125

   69 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement . T_RBRACKET statement
   70                    | T_FOR T_LBRACKET expression_statement expression_statement . expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    T_RBRACKET  shift, and go to state 128
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 129


State 126

   66 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement .
   67                    | T_IF T_LBRACKET expression T_RBRACKET statement . T_ELSE statement

    T_ELSE  shift, and go to state 130

    T_ELSE    [reduce using rule 66 (condition_statement)]
    $default  reduce using rule 66 (condition_statement)


State 127

   68 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement .

    $default  reduce using rule 68 (iteration_statement)


State 128

   69 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 131
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101


State 129

   70 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 132


State 130

   67 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 133
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101


State 131

   69 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET statement .

    $default  reduce using rule 69 (iteration_statement)


State 132

   70 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 60
    T_IF          shift, and go to state 88
    T_WHILE       shift, and go to state 89
    T_RETURN      shift, and go to state 90
    T_FOR         shift, and go to state 91
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 94
    statement              go to state 134
    compound_statement     go to state 97
    jump_statement         go to state 98
    expression_statement   go to state 99
    condition_statement    go to state 100
    iteration_statement    go to state 101


State 133

   67 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement .

    $default  reduce using rule 67 (condition_statement)


State 134

   70 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement .

    $default  reduce using rule 70 (iteration_statement)
