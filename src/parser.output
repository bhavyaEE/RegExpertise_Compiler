Terminals unused in grammar

    COLON


State 137 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: root_program

    2 root_program: external_declaration
    3             | root_program external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement

    8 initialisation_declarator: declarator
    9                          | NAME T_ASSIGN assignment_expression

   10 declaration_list: declaration
   11                 | declaration_list declaration

   12 declarator: NAME
   13           | NAME SQU_LBRACKET add_expression SQU_RBRACKET
   14           | NAME T_LBRACKET T_RBRACKET
   15           | NAME T_LBRACKET parameter_list T_RBRACKET

   16 declaration: type_specifier SEMICOLON
   17            | type_specifier initialisation_declarator SEMICOLON

   18 parameter_declaration: type_specifier declarator

   19 parameter_list: parameter_declaration
   20               | parameter_list COMMA parameter_declaration

   21 function_call_expression: shift_expression
   22                         | function_call_expression COMMA multiply_expression

   23 primary_expression: NUMBER
   24                   | NAME
   25                   | NAME SQU_LBRACKET expression SQU_RBRACKET
   26                   | T_LBRACKET expression T_RBRACKET
   27                   | NAME T_LBRACKET T_RBRACKET
   28                   | NAME T_LBRACKET function_call_expression T_RBRACKET

   29 postfix_expression: primary_expression
   30                   | postfix_expression INC_OP

   31 add_expression: multiply_expression
   32               | add_expression T_PLUS multiply_expression
   33               | add_expression T_MINUS multiply_expression

   34 multiply_expression: postfix_expression
   35                    | multiply_expression T_TIMES postfix_expression
   36                    | multiply_expression T_DIVIDE postfix_expression

   37 shift_expression: add_expression
   38                 | shift_expression T_LEFT_SHIFT add_expression
   39                 | shift_expression T_RIGHT_SHIFT add_expression

   40 compare_expression: shift_expression
   41                   | compare_expression T_LESSTHAN shift_expression
   42                   | compare_expression T_LESS_EQUAL shift_expression
   43                   | compare_expression T_GREATERTHAN shift_expression
   44                   | compare_expression T_GREATER_EQUAL shift_expression

   45 equal_expression: compare_expression
   46                 | equal_expression T_EQUAL compare_expression
   47                 | equal_expression T_NOT_EQUAL compare_expression

   48 bitwise_expression: equal_expression
   49                   | bitwise_expression T_BIT_AND equal_expression
   50                   | bitwise_expression T_BIT_OR equal_expression
   51                   | bitwise_expression T_BIT_XOR equal_expression

   52 logical_expression: bitwise_expression
   53                   | logical_expression T_LOGICAL_AND bitwise_expression
   54                   | logical_expression T_LOGICAL_OR bitwise_expression

   55 assignment_expression: logical_expression
   56                      | postfix_expression T_ASSIGN assignment_expression

   57 expression: assignment_expression

   58 statement: jump_statement
   59          | compound_statement
   60          | expression_statement
   61          | condition_statement
   62          | iteration_statement

   63 statement_list: statement
   64               | statement_list statement

   65 compound_statement: CUR_LBRACKET CUR_RBRACKET
   66                   | CUR_LBRACKET statement_list CUR_RBRACKET
   67                   | CUR_LBRACKET declaration_list CUR_RBRACKET
   68                   | CUR_LBRACKET declaration_list statement_list CUR_RBRACKET

   69 jump_statement: T_RETURN SEMICOLON
   70               | T_RETURN expression SEMICOLON

   71 expression_statement: expression SEMICOLON

   72 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement
   73                    | T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement

   74 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement
   75                    | T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET statement
   76                    | T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement

   77 type_specifier: T_INT
   78               | T_UNSIGNED


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_ASSIGN (258) 9 56
    T_TIMES (259) 35
    T_DIVIDE (260) 36
    T_PLUS (261) 32
    T_MINUS (262) 33
    T_BIT_AND (263) 49
    T_BIT_OR (264) 50
    T_BIT_XOR (265) 51
    T_LOGICAL_OR (266) 54
    T_LOGICAL_AND (267) 53
    T_RIGHT_SHIFT (268) 39
    T_LEFT_SHIFT (269) 38
    T_LBRACKET (270) 6 7 14 15 26 27 28 72 73 74 75 76
    T_RBRACKET (271) 6 7 14 15 26 27 28 72 73 74 75 76
    CUR_LBRACKET (272) 65 66 67 68
    CUR_RBRACKET (273) 65 66 67 68
    SQU_LBRACKET (274) 13 25
    SQU_RBRACKET (275) 13 25
    COLON (276)
    SEMICOLON (277) 16 17 69 70 71
    COMMA (278) 20 22
    T_LESSTHAN (279) 41
    T_GREATERTHAN (280) 43
    T_LESS_EQUAL (281) 42
    T_GREATER_EQUAL (282) 44
    T_EQUAL (283) 46
    T_NOT_EQUAL (284) 47
    T_INT (285) 77
    T_UNSIGNED (286) 78
    T_IF (287) 72 73
    T_ELSE (288) 73
    T_WHILE (289) 74
    T_RETURN (290) 69 70
    T_FOR (291) 75 76
    INC_OP (292) 30
    NAME <string> (293) 6 7 9 12 13 14 15 24 25 27 28
    NUMBER <number> (294) 23


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    ROOT (41)
        on left: 1
        on right: 0
    root_program <NodePtr> (42)
        on left: 2 3
        on right: 1 3
    external_declaration <NodePtr> (43)
        on left: 4 5
        on right: 2 3
    function_definition <NodePtr> (44)
        on left: 6 7
        on right: 4
    initialisation_declarator <NodePtr> (45)
        on left: 8 9
        on right: 17
    declaration_list <NodeVectorPtr> (46)
        on left: 10 11
        on right: 11 67 68
    declarator <NodePtr> (47)
        on left: 12 13 14 15
        on right: 8 18
    declaration <NodePtr> (48)
        on left: 16 17
        on right: 5 10 11
    parameter_declaration <NodePtr> (49)
        on left: 18
        on right: 19 20
    parameter_list <NodeVectorPtr> (50)
        on left: 19 20
        on right: 7 15 20
    function_call_expression <NodeVectorPtr> (51)
        on left: 21 22
        on right: 22 28
    primary_expression <NodePtr> (52)
        on left: 23 24 25 26 27 28
        on right: 29
    postfix_expression <NodePtr> (53)
        on left: 29 30
        on right: 30 34 35 36 56
    add_expression <NodePtr> (54)
        on left: 31 32 33
        on right: 13 32 33 37 38 39
    multiply_expression <NodePtr> (55)
        on left: 34 35 36
        on right: 22 31 32 33 35 36
    shift_expression <NodePtr> (56)
        on left: 37 38 39
        on right: 21 38 39 40 41 42 43 44
    compare_expression <NodePtr> (57)
        on left: 40 41 42 43 44
        on right: 41 42 43 44 45 46 47
    equal_expression <NodePtr> (58)
        on left: 45 46 47
        on right: 46 47 48 49 50 51
    bitwise_expression <NodePtr> (59)
        on left: 48 49 50 51
        on right: 49 50 51 52 53 54
    logical_expression <NodePtr> (60)
        on left: 52 53 54
        on right: 53 54 55
    assignment_expression <NodePtr> (61)
        on left: 55 56
        on right: 9 56 57
    expression <NodePtr> (62)
        on left: 57
        on right: 25 26 70 71 72 73 74 76
    statement <NodePtr> (63)
        on left: 58 59 60 61 62
        on right: 63 64 72 73 74 75 76
    statement_list <NodeVectorPtr> (64)
        on left: 63 64
        on right: 64 66 68
    compound_statement <NodePtr> (65)
        on left: 65 66 67 68
        on right: 6 7 59
    jump_statement <NodePtr> (66)
        on left: 69 70
        on right: 58
    expression_statement <NodePtr> (67)
        on left: 71
        on right: 60 75 76
    condition_statement <NodePtr> (68)
        on left: 72 73
        on right: 61
    iteration_statement <NodePtr> (69)
        on left: 74 75 76
        on right: 62
    type_specifier <string> (70)
        on left: 77 78
        on right: 6 7 16 17 18


State 0

    0 $accept: . ROOT $end

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    ROOT                  go to state 3
    root_program          go to state 4
    external_declaration  go to state 5
    function_definition   go to state 6
    declaration           go to state 7
    type_specifier        go to state 8


State 1

   77 type_specifier: T_INT .

    $default  reduce using rule 77 (type_specifier)


State 2

   78 type_specifier: T_UNSIGNED .

    $default  reduce using rule 78 (type_specifier)


State 3

    0 $accept: ROOT . $end

    $end  shift, and go to state 9


State 4

    1 ROOT: root_program .
    3 root_program: root_program . external_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    $default  reduce using rule 1 (ROOT)

    external_declaration  go to state 10
    function_definition   go to state 6
    declaration           go to state 7
    type_specifier        go to state 8


State 5

    2 root_program: external_declaration .

    $default  reduce using rule 2 (root_program)


State 6

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 7

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


State 8

    6 function_definition: type_specifier . NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier . NAME T_LBRACKET parameter_list T_RBRACKET compound_statement
   16 declaration: type_specifier . SEMICOLON
   17            | type_specifier . initialisation_declarator SEMICOLON

    SEMICOLON  shift, and go to state 11
    NAME       shift, and go to state 12

    initialisation_declarator  go to state 13
    declarator                 go to state 14


State 9

    0 $accept: ROOT $end .

    $default  accept


State 10

    3 root_program: root_program external_declaration .

    $default  reduce using rule 3 (root_program)


State 11

   16 declaration: type_specifier SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 12

    6 function_definition: type_specifier NAME . T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME . T_LBRACKET parameter_list T_RBRACKET compound_statement
    9 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12 declarator: NAME .
   13           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET
   14           | NAME . T_LBRACKET T_RBRACKET
   15           | NAME . T_LBRACKET parameter_list T_RBRACKET

    T_ASSIGN      shift, and go to state 15
    T_LBRACKET    shift, and go to state 16
    SQU_LBRACKET  shift, and go to state 17

    $default  reduce using rule 12 (declarator)


State 13

   17 declaration: type_specifier initialisation_declarator . SEMICOLON

    SEMICOLON  shift, and go to state 18


State 14

    8 initialisation_declarator: declarator .

    $default  reduce using rule 8 (initialisation_declarator)


State 15

    9 initialisation_declarator: NAME T_ASSIGN . assignment_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 31


State 16

    6 function_definition: type_specifier NAME T_LBRACKET . T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET . parameter_list T_RBRACKET compound_statement
   14 declarator: NAME T_LBRACKET . T_RBRACKET
   15           | NAME T_LBRACKET . parameter_list T_RBRACKET

    T_RBRACKET  shift, and go to state 32
    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    parameter_declaration  go to state 33
    parameter_list         go to state 34
    type_specifier         go to state 35


State 17

   13 declarator: NAME SQU_LBRACKET . add_expression SQU_RBRACKET

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 37
    multiply_expression  go to state 25


State 18

   17 declaration: type_specifier initialisation_declarator SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 19

   26 primary_expression: T_LBRACKET . expression T_RBRACKET

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 39


State 20

   24 primary_expression: NAME .
   25                   | NAME . SQU_LBRACKET expression SQU_RBRACKET
   27                   | NAME . T_LBRACKET T_RBRACKET
   28                   | NAME . T_LBRACKET function_call_expression T_RBRACKET

    T_LBRACKET    shift, and go to state 40
    SQU_LBRACKET  shift, and go to state 41

    $default  reduce using rule 24 (primary_expression)


State 21

   23 primary_expression: NUMBER .

    $default  reduce using rule 23 (primary_expression)


State 22

   29 postfix_expression: primary_expression .

    $default  reduce using rule 29 (postfix_expression)


State 23

   30 postfix_expression: postfix_expression . INC_OP
   34 multiply_expression: postfix_expression .
   56 assignment_expression: postfix_expression . T_ASSIGN assignment_expression

    T_ASSIGN  shift, and go to state 42
    INC_OP    shift, and go to state 43

    $default  reduce using rule 34 (multiply_expression)


State 24

   32 add_expression: add_expression . T_PLUS multiply_expression
   33               | add_expression . T_MINUS multiply_expression
   37 shift_expression: add_expression .

    T_PLUS   shift, and go to state 44
    T_MINUS  shift, and go to state 45

    $default  reduce using rule 37 (shift_expression)


State 25

   31 add_expression: multiply_expression .
   35 multiply_expression: multiply_expression . T_TIMES postfix_expression
   36                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 46
    T_DIVIDE  shift, and go to state 47

    $default  reduce using rule 31 (add_expression)


State 26

   38 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   39                 | shift_expression . T_RIGHT_SHIFT add_expression
   40 compare_expression: shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 48
    T_LEFT_SHIFT   shift, and go to state 49

    $default  reduce using rule 40 (compare_expression)


State 27

   41 compare_expression: compare_expression . T_LESSTHAN shift_expression
   42                   | compare_expression . T_LESS_EQUAL shift_expression
   43                   | compare_expression . T_GREATERTHAN shift_expression
   44                   | compare_expression . T_GREATER_EQUAL shift_expression
   45 equal_expression: compare_expression .

    T_LESSTHAN       shift, and go to state 50
    T_GREATERTHAN    shift, and go to state 51
    T_LESS_EQUAL     shift, and go to state 52
    T_GREATER_EQUAL  shift, and go to state 53

    $default  reduce using rule 45 (equal_expression)


State 28

   46 equal_expression: equal_expression . T_EQUAL compare_expression
   47                 | equal_expression . T_NOT_EQUAL compare_expression
   48 bitwise_expression: equal_expression .

    T_EQUAL      shift, and go to state 54
    T_NOT_EQUAL  shift, and go to state 55

    $default  reduce using rule 48 (bitwise_expression)


State 29

   49 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   50                   | bitwise_expression . T_BIT_OR equal_expression
   51                   | bitwise_expression . T_BIT_XOR equal_expression
   52 logical_expression: bitwise_expression .

    T_BIT_AND  shift, and go to state 56
    T_BIT_OR   shift, and go to state 57
    T_BIT_XOR  shift, and go to state 58

    $default  reduce using rule 52 (logical_expression)


State 30

   53 logical_expression: logical_expression . T_LOGICAL_AND bitwise_expression
   54                   | logical_expression . T_LOGICAL_OR bitwise_expression
   55 assignment_expression: logical_expression .

    T_LOGICAL_OR   shift, and go to state 59
    T_LOGICAL_AND  shift, and go to state 60

    $default  reduce using rule 55 (assignment_expression)


State 31

    9 initialisation_declarator: NAME T_ASSIGN assignment_expression .

    $default  reduce using rule 9 (initialisation_declarator)


State 32

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET . compound_statement
   14 declarator: NAME T_LBRACKET T_RBRACKET .

    CUR_LBRACKET  shift, and go to state 61

    $default  reduce using rule 14 (declarator)

    compound_statement  go to state 62


State 33

   19 parameter_list: parameter_declaration .

    $default  reduce using rule 19 (parameter_list)


State 34

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list . T_RBRACKET compound_statement
   15 declarator: NAME T_LBRACKET parameter_list . T_RBRACKET
   20 parameter_list: parameter_list . COMMA parameter_declaration

    T_RBRACKET  shift, and go to state 63
    COMMA       shift, and go to state 64


State 35

   18 parameter_declaration: type_specifier . declarator

    NAME  shift, and go to state 65

    declarator  go to state 66


State 36

   30 postfix_expression: postfix_expression . INC_OP
   34 multiply_expression: postfix_expression .

    INC_OP  shift, and go to state 43

    $default  reduce using rule 34 (multiply_expression)


State 37

   13 declarator: NAME SQU_LBRACKET add_expression . SQU_RBRACKET
   32 add_expression: add_expression . T_PLUS multiply_expression
   33               | add_expression . T_MINUS multiply_expression

    T_PLUS        shift, and go to state 44
    T_MINUS       shift, and go to state 45
    SQU_RBRACKET  shift, and go to state 67


State 38

   57 expression: assignment_expression .

    $default  reduce using rule 57 (expression)


State 39

   26 primary_expression: T_LBRACKET expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 68


State 40

   27 primary_expression: NAME T_LBRACKET . T_RBRACKET
   28                   | NAME T_LBRACKET . function_call_expression T_RBRACKET

    T_LBRACKET  shift, and go to state 19
    T_RBRACKET  shift, and go to state 69
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    function_call_expression  go to state 70
    primary_expression        go to state 22
    postfix_expression        go to state 36
    add_expression            go to state 24
    multiply_expression       go to state 25
    shift_expression          go to state 71


State 41

   25 primary_expression: NAME SQU_LBRACKET . expression SQU_RBRACKET

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 72


State 42

   56 assignment_expression: postfix_expression T_ASSIGN . assignment_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 73


State 43

   30 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 30 (postfix_expression)


State 44

   32 add_expression: add_expression T_PLUS . multiply_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    multiply_expression  go to state 74


State 45

   33 add_expression: add_expression T_MINUS . multiply_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    multiply_expression  go to state 75


State 46

   35 multiply_expression: multiply_expression T_TIMES . postfix_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression  go to state 22
    postfix_expression  go to state 76


State 47

   36 multiply_expression: multiply_expression T_DIVIDE . postfix_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression  go to state 22
    postfix_expression  go to state 77


State 48

   39 shift_expression: shift_expression T_RIGHT_SHIFT . add_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 78
    multiply_expression  go to state 25


State 49

   38 shift_expression: shift_expression T_LEFT_SHIFT . add_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 79
    multiply_expression  go to state 25


State 50

   41 compare_expression: compare_expression T_LESSTHAN . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 80


State 51

   43 compare_expression: compare_expression T_GREATERTHAN . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 81


State 52

   42 compare_expression: compare_expression T_LESS_EQUAL . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 82


State 53

   44 compare_expression: compare_expression T_GREATER_EQUAL . shift_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 83


State 54

   46 equal_expression: equal_expression T_EQUAL . compare_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 84


State 55

   47 equal_expression: equal_expression T_NOT_EQUAL . compare_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 85


State 56

   49 bitwise_expression: bitwise_expression T_BIT_AND . equal_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 86


State 57

   50 bitwise_expression: bitwise_expression T_BIT_OR . equal_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 87


State 58

   51 bitwise_expression: bitwise_expression T_BIT_XOR . equal_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 88


State 59

   54 logical_expression: logical_expression T_LOGICAL_OR . bitwise_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 28
    bitwise_expression   go to state 89


State 60

   53 logical_expression: logical_expression T_LOGICAL_AND . bitwise_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    add_expression       go to state 24
    multiply_expression  go to state 25
    shift_expression     go to state 26
    compare_expression   go to state 27
    equal_expression     go to state 28
    bitwise_expression   go to state 90


State 61

   65 compound_statement: CUR_LBRACKET . CUR_RBRACKET
   66                   | CUR_LBRACKET . statement_list CUR_RBRACKET
   67                   | CUR_LBRACKET . declaration_list CUR_RBRACKET
   68                   | CUR_LBRACKET . declaration_list statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    CUR_RBRACKET  shift, and go to state 91
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    declaration_list       go to state 96
    declaration            go to state 97
    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 99
    statement_list         go to state 100
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105
    type_specifier         go to state 106


State 62

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement .

    $default  reduce using rule 6 (function_definition)


State 63

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET . compound_statement
   15 declarator: NAME T_LBRACKET parameter_list T_RBRACKET .

    CUR_LBRACKET  shift, and go to state 61

    $default  reduce using rule 15 (declarator)

    compound_statement  go to state 107


State 64

   20 parameter_list: parameter_list COMMA . parameter_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    parameter_declaration  go to state 108
    type_specifier         go to state 35


State 65

   12 declarator: NAME .
   13           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET
   14           | NAME . T_LBRACKET T_RBRACKET
   15           | NAME . T_LBRACKET parameter_list T_RBRACKET

    T_LBRACKET    shift, and go to state 109
    SQU_LBRACKET  shift, and go to state 17

    $default  reduce using rule 12 (declarator)


State 66

   18 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 18 (parameter_declaration)


State 67

   13 declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET .

    $default  reduce using rule 13 (declarator)


State 68

   26 primary_expression: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 26 (primary_expression)


State 69

   27 primary_expression: NAME T_LBRACKET T_RBRACKET .

    $default  reduce using rule 27 (primary_expression)


State 70

   22 function_call_expression: function_call_expression . COMMA multiply_expression
   28 primary_expression: NAME T_LBRACKET function_call_expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 110
    COMMA       shift, and go to state 111


State 71

   21 function_call_expression: shift_expression .
   38 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   39                 | shift_expression . T_RIGHT_SHIFT add_expression

    T_RIGHT_SHIFT  shift, and go to state 48
    T_LEFT_SHIFT   shift, and go to state 49

    $default  reduce using rule 21 (function_call_expression)


State 72

   25 primary_expression: NAME SQU_LBRACKET expression . SQU_RBRACKET

    SQU_RBRACKET  shift, and go to state 112


State 73

   56 assignment_expression: postfix_expression T_ASSIGN assignment_expression .

    $default  reduce using rule 56 (assignment_expression)


State 74

   32 add_expression: add_expression T_PLUS multiply_expression .
   35 multiply_expression: multiply_expression . T_TIMES postfix_expression
   36                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 46
    T_DIVIDE  shift, and go to state 47

    $default  reduce using rule 32 (add_expression)


State 75

   33 add_expression: add_expression T_MINUS multiply_expression .
   35 multiply_expression: multiply_expression . T_TIMES postfix_expression
   36                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 46
    T_DIVIDE  shift, and go to state 47

    $default  reduce using rule 33 (add_expression)


State 76

   30 postfix_expression: postfix_expression . INC_OP
   35 multiply_expression: multiply_expression T_TIMES postfix_expression .

    INC_OP  shift, and go to state 43

    $default  reduce using rule 35 (multiply_expression)


State 77

   30 postfix_expression: postfix_expression . INC_OP
   36 multiply_expression: multiply_expression T_DIVIDE postfix_expression .

    INC_OP  shift, and go to state 43

    $default  reduce using rule 36 (multiply_expression)


State 78

   32 add_expression: add_expression . T_PLUS multiply_expression
   33               | add_expression . T_MINUS multiply_expression
   39 shift_expression: shift_expression T_RIGHT_SHIFT add_expression .

    T_PLUS   shift, and go to state 44
    T_MINUS  shift, and go to state 45

    $default  reduce using rule 39 (shift_expression)


State 79

   32 add_expression: add_expression . T_PLUS multiply_expression
   33               | add_expression . T_MINUS multiply_expression
   38 shift_expression: shift_expression T_LEFT_SHIFT add_expression .

    T_PLUS   shift, and go to state 44
    T_MINUS  shift, and go to state 45

    $default  reduce using rule 38 (shift_expression)


State 80

   38 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   39                 | shift_expression . T_RIGHT_SHIFT add_expression
   41 compare_expression: compare_expression T_LESSTHAN shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 48
    T_LEFT_SHIFT   shift, and go to state 49

    $default  reduce using rule 41 (compare_expression)


State 81

   38 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   39                 | shift_expression . T_RIGHT_SHIFT add_expression
   43 compare_expression: compare_expression T_GREATERTHAN shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 48
    T_LEFT_SHIFT   shift, and go to state 49

    $default  reduce using rule 43 (compare_expression)


State 82

   38 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   39                 | shift_expression . T_RIGHT_SHIFT add_expression
   42 compare_expression: compare_expression T_LESS_EQUAL shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 48
    T_LEFT_SHIFT   shift, and go to state 49

    $default  reduce using rule 42 (compare_expression)


State 83

   38 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   39                 | shift_expression . T_RIGHT_SHIFT add_expression
   44 compare_expression: compare_expression T_GREATER_EQUAL shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 48
    T_LEFT_SHIFT   shift, and go to state 49

    $default  reduce using rule 44 (compare_expression)


State 84

   41 compare_expression: compare_expression . T_LESSTHAN shift_expression
   42                   | compare_expression . T_LESS_EQUAL shift_expression
   43                   | compare_expression . T_GREATERTHAN shift_expression
   44                   | compare_expression . T_GREATER_EQUAL shift_expression
   46 equal_expression: equal_expression T_EQUAL compare_expression .

    T_LESSTHAN       shift, and go to state 50
    T_GREATERTHAN    shift, and go to state 51
    T_LESS_EQUAL     shift, and go to state 52
    T_GREATER_EQUAL  shift, and go to state 53

    $default  reduce using rule 46 (equal_expression)


State 85

   41 compare_expression: compare_expression . T_LESSTHAN shift_expression
   42                   | compare_expression . T_LESS_EQUAL shift_expression
   43                   | compare_expression . T_GREATERTHAN shift_expression
   44                   | compare_expression . T_GREATER_EQUAL shift_expression
   47 equal_expression: equal_expression T_NOT_EQUAL compare_expression .

    T_LESSTHAN       shift, and go to state 50
    T_GREATERTHAN    shift, and go to state 51
    T_LESS_EQUAL     shift, and go to state 52
    T_GREATER_EQUAL  shift, and go to state 53

    $default  reduce using rule 47 (equal_expression)


State 86

   46 equal_expression: equal_expression . T_EQUAL compare_expression
   47                 | equal_expression . T_NOT_EQUAL compare_expression
   49 bitwise_expression: bitwise_expression T_BIT_AND equal_expression .

    T_EQUAL      shift, and go to state 54
    T_NOT_EQUAL  shift, and go to state 55

    $default  reduce using rule 49 (bitwise_expression)


State 87

   46 equal_expression: equal_expression . T_EQUAL compare_expression
   47                 | equal_expression . T_NOT_EQUAL compare_expression
   50 bitwise_expression: bitwise_expression T_BIT_OR equal_expression .

    T_EQUAL      shift, and go to state 54
    T_NOT_EQUAL  shift, and go to state 55

    $default  reduce using rule 50 (bitwise_expression)


State 88

   46 equal_expression: equal_expression . T_EQUAL compare_expression
   47                 | equal_expression . T_NOT_EQUAL compare_expression
   51 bitwise_expression: bitwise_expression T_BIT_XOR equal_expression .

    T_EQUAL      shift, and go to state 54
    T_NOT_EQUAL  shift, and go to state 55

    $default  reduce using rule 51 (bitwise_expression)


State 89

   49 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   50                   | bitwise_expression . T_BIT_OR equal_expression
   51                   | bitwise_expression . T_BIT_XOR equal_expression
   54 logical_expression: logical_expression T_LOGICAL_OR bitwise_expression .

    T_BIT_AND  shift, and go to state 56
    T_BIT_OR   shift, and go to state 57
    T_BIT_XOR  shift, and go to state 58

    $default  reduce using rule 54 (logical_expression)


State 90

   49 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   50                   | bitwise_expression . T_BIT_OR equal_expression
   51                   | bitwise_expression . T_BIT_XOR equal_expression
   53 logical_expression: logical_expression T_LOGICAL_AND bitwise_expression .

    T_BIT_AND  shift, and go to state 56
    T_BIT_OR   shift, and go to state 57
    T_BIT_XOR  shift, and go to state 58

    $default  reduce using rule 53 (logical_expression)


State 91

   65 compound_statement: CUR_LBRACKET CUR_RBRACKET .

    $default  reduce using rule 65 (compound_statement)


State 92

   72 condition_statement: T_IF . T_LBRACKET expression T_RBRACKET statement
   73                    | T_IF . T_LBRACKET expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 113


State 93

   74 iteration_statement: T_WHILE . T_LBRACKET expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 114


State 94

   69 jump_statement: T_RETURN . SEMICOLON
   70               | T_RETURN . expression SEMICOLON

    T_LBRACKET  shift, and go to state 19
    SEMICOLON   shift, and go to state 115
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 116


State 95

   75 iteration_statement: T_FOR . T_LBRACKET expression_statement expression_statement T_RBRACKET statement
   76                    | T_FOR . T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 117


State 96

   11 declaration_list: declaration_list . declaration
   67 compound_statement: CUR_LBRACKET declaration_list . CUR_RBRACKET
   68                   | CUR_LBRACKET declaration_list . statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    CUR_RBRACKET  shift, and go to state 118
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    declaration            go to state 119
    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 99
    statement_list         go to state 120
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105
    type_specifier         go to state 106


State 97

   10 declaration_list: declaration .

    $default  reduce using rule 10 (declaration_list)


State 98

   71 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 99

   63 statement_list: statement .

    $default  reduce using rule 63 (statement_list)


State 100

   64 statement_list: statement_list . statement
   66 compound_statement: CUR_LBRACKET statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    CUR_RBRACKET  shift, and go to state 122
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 123
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105


State 101

   59 statement: compound_statement .

    $default  reduce using rule 59 (statement)


State 102

   58 statement: jump_statement .

    $default  reduce using rule 58 (statement)


State 103

   60 statement: expression_statement .

    $default  reduce using rule 60 (statement)


State 104

   61 statement: condition_statement .

    $default  reduce using rule 61 (statement)


State 105

   62 statement: iteration_statement .

    $default  reduce using rule 62 (statement)


State 106

   16 declaration: type_specifier . SEMICOLON
   17            | type_specifier . initialisation_declarator SEMICOLON

    SEMICOLON  shift, and go to state 11
    NAME       shift, and go to state 124

    initialisation_declarator  go to state 13
    declarator                 go to state 14


State 107

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement .

    $default  reduce using rule 7 (function_definition)


State 108

   20 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 20 (parameter_list)


State 109

   14 declarator: NAME T_LBRACKET . T_RBRACKET
   15           | NAME T_LBRACKET . parameter_list T_RBRACKET

    T_RBRACKET  shift, and go to state 125
    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    parameter_declaration  go to state 33
    parameter_list         go to state 126
    type_specifier         go to state 35


State 110

   28 primary_expression: NAME T_LBRACKET function_call_expression T_RBRACKET .

    $default  reduce using rule 28 (primary_expression)


State 111

   22 function_call_expression: function_call_expression COMMA . multiply_expression

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression   go to state 22
    postfix_expression   go to state 36
    multiply_expression  go to state 127


State 112

   25 primary_expression: NAME SQU_LBRACKET expression SQU_RBRACKET .

    $default  reduce using rule 25 (primary_expression)


State 113

   72 condition_statement: T_IF T_LBRACKET . expression T_RBRACKET statement
   73                    | T_IF T_LBRACKET . expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 128


State 114

   74 iteration_statement: T_WHILE T_LBRACKET . expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 129


State 115

   69 jump_statement: T_RETURN SEMICOLON .

    $default  reduce using rule 69 (jump_statement)


State 116

   70 jump_statement: T_RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 130


State 117

   75 iteration_statement: T_FOR T_LBRACKET . expression_statement expression_statement T_RBRACKET statement
   76                    | T_FOR T_LBRACKET . expression_statement expression_statement expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    expression_statement   go to state 131


State 118

   67 compound_statement: CUR_LBRACKET declaration_list CUR_RBRACKET .

    $default  reduce using rule 67 (compound_statement)


State 119

   11 declaration_list: declaration_list declaration .

    $default  reduce using rule 11 (declaration_list)


State 120

   64 statement_list: statement_list . statement
   68 compound_statement: CUR_LBRACKET declaration_list statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    CUR_RBRACKET  shift, and go to state 132
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 123
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105


State 121

   71 expression_statement: expression SEMICOLON .

    $default  reduce using rule 71 (expression_statement)


State 122

   66 compound_statement: CUR_LBRACKET statement_list CUR_RBRACKET .

    $default  reduce using rule 66 (compound_statement)


State 123

   64 statement_list: statement_list statement .

    $default  reduce using rule 64 (statement_list)


State 124

    9 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12 declarator: NAME .
   13           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET
   14           | NAME . T_LBRACKET T_RBRACKET
   15           | NAME . T_LBRACKET parameter_list T_RBRACKET

    T_ASSIGN      shift, and go to state 15
    T_LBRACKET    shift, and go to state 109
    SQU_LBRACKET  shift, and go to state 17

    $default  reduce using rule 12 (declarator)


State 125

   14 declarator: NAME T_LBRACKET T_RBRACKET .

    $default  reduce using rule 14 (declarator)


State 126

   15 declarator: NAME T_LBRACKET parameter_list . T_RBRACKET
   20 parameter_list: parameter_list . COMMA parameter_declaration

    T_RBRACKET  shift, and go to state 133
    COMMA       shift, and go to state 64


State 127

   22 function_call_expression: function_call_expression COMMA multiply_expression .
   35 multiply_expression: multiply_expression . T_TIMES postfix_expression
   36                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 46
    T_DIVIDE  shift, and go to state 47

    $default  reduce using rule 22 (function_call_expression)


State 128

   72 condition_statement: T_IF T_LBRACKET expression . T_RBRACKET statement
   73                    | T_IF T_LBRACKET expression . T_RBRACKET statement T_ELSE statement

    T_RBRACKET  shift, and go to state 134


State 129

   74 iteration_statement: T_WHILE T_LBRACKET expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 135


State 130

   70 jump_statement: T_RETURN expression SEMICOLON .

    $default  reduce using rule 70 (jump_statement)


State 131

   75 iteration_statement: T_FOR T_LBRACKET expression_statement . expression_statement T_RBRACKET statement
   76                    | T_FOR T_LBRACKET expression_statement . expression_statement expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    expression_statement   go to state 136


State 132

   68 compound_statement: CUR_LBRACKET declaration_list statement_list CUR_RBRACKET .

    $default  reduce using rule 68 (compound_statement)


State 133

   15 declarator: NAME T_LBRACKET parameter_list T_RBRACKET .

    $default  reduce using rule 15 (declarator)


State 134

   72 condition_statement: T_IF T_LBRACKET expression T_RBRACKET . statement
   73                    | T_IF T_LBRACKET expression T_RBRACKET . statement T_ELSE statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 137
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105


State 135

   74 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 138
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105


State 136

   75 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement . T_RBRACKET statement
   76                    | T_FOR T_LBRACKET expression_statement expression_statement . expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 19
    T_RBRACKET  shift, and go to state 139
    NAME        shift, and go to state 20
    NUMBER      shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 140


State 137

   72 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement .
   73                    | T_IF T_LBRACKET expression T_RBRACKET statement . T_ELSE statement

    T_ELSE  shift, and go to state 141

    T_ELSE    [reduce using rule 72 (condition_statement)]
    $default  reduce using rule 72 (condition_statement)


State 138

   74 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement .

    $default  reduce using rule 74 (iteration_statement)


State 139

   75 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 142
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105


State 140

   76 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 143


State 141

   73 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 144
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105


State 142

   75 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET statement .

    $default  reduce using rule 75 (iteration_statement)


State 143

   76 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 19
    CUR_LBRACKET  shift, and go to state 61
    T_IF          shift, and go to state 92
    T_WHILE       shift, and go to state 93
    T_RETURN      shift, and go to state 94
    T_FOR         shift, and go to state 95
    NAME          shift, and go to state 20
    NUMBER        shift, and go to state 21

    primary_expression     go to state 22
    postfix_expression     go to state 23
    add_expression         go to state 24
    multiply_expression    go to state 25
    shift_expression       go to state 26
    compare_expression     go to state 27
    equal_expression       go to state 28
    bitwise_expression     go to state 29
    logical_expression     go to state 30
    assignment_expression  go to state 38
    expression             go to state 98
    statement              go to state 145
    compound_statement     go to state 101
    jump_statement         go to state 102
    expression_statement   go to state 103
    condition_statement    go to state 104
    iteration_statement    go to state 105


State 144

   73 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement .

    $default  reduce using rule 73 (condition_statement)


State 145

   76 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement .

    $default  reduce using rule 76 (iteration_statement)
