Terminals unused in grammar

    T_TIMES
    T_DIVIDE
    T_PLUS
    T_MINUS
    SQU_LBRACKET
    SQU_RBRACKET
    COLON
    T_LESSTHAN
    T_GREATERTHAN
    T_LESS_EQUAL
    T_GREATER_EQUAL
    T_EQUAL
    T_NOT_EQUAL


State 79 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: root_program

    2 root_program: external_declaration
    3             | root_program external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement

    8 initialisation_declarator: declarator
    9                          | NAME T_ASSIGN assignment_expression

   10 declaration_list: declaration
   11                 | declaration_list declaration

   12 declarator: NAME

   13 declaration: type_specifier SEMICOLON
   14            | type_specifier initialisation_declarator SEMICOLON

   15 parameter_declaration: type_specifier declarator

   16 parameter_list: parameter_declaration
   17               | parameter_list COMMA parameter_declaration

   18 primary_expression: NUMBER
   19                   | NAME
   20                   | T_LBRACKET expression T_RBRACKET

   21 postfix_expression: primary_expression

   22 add_expression: multiply_expression

   23 multiply_expression: postfix_expression

   24 compare_expression: add_expression

   25 equal_expression: compare_expression

   26 bitwise_expression: equal_expression

   27 logical_expression: bitwise_expression

   28 assignment_expression: logical_expression
   29                      | postfix_expression T_ASSIGN assignment_expression

   30 expression: assignment_expression

   31 statement: jump_statement
   32          | compound_statement
   33          | expression_statement
   34          | condition_statement
   35          | iteration_statement

   36 statement_list: statement
   37               | statement_list statement

   38 compound_statement: CUR_LBRACKET CUR_RBRACKET
   39                   | CUR_LBRACKET statement_list CUR_RBRACKET
   40                   | CUR_LBRACKET declaration_list CUR_RBRACKET
   41                   | CUR_LBRACKET declaration_list statement_list CUR_RBRACKET

   42 jump_statement: T_RETURN SEMICOLON
   43               | T_RETURN expression SEMICOLON

   44 expression_statement: expression SEMICOLON

   45 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement
   46                    | T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement

   47 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement

   48 type_specifier: T_INT
   49               | T_UNSIGNED


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_ASSIGN (258) 9 29
    T_TIMES (259)
    T_DIVIDE (260)
    T_PLUS (261)
    T_MINUS (262)
    T_LBRACKET (263) 6 7 20 45 46 47
    T_RBRACKET (264) 6 7 20 45 46 47
    CUR_LBRACKET (265) 38 39 40 41
    CUR_RBRACKET (266) 38 39 40 41
    SQU_LBRACKET (267)
    SQU_RBRACKET (268)
    COLON (269)
    SEMICOLON (270) 13 14 42 43 44
    COMMA (271) 17
    T_LESSTHAN (272)
    T_GREATERTHAN (273)
    T_LESS_EQUAL (274)
    T_GREATER_EQUAL (275)
    T_EQUAL (276)
    T_NOT_EQUAL (277)
    T_INT (278) 48
    T_UNSIGNED (279) 49
    T_IF (280) 45 46
    T_ELSE (281) 46
    T_WHILE (282) 47
    T_RETURN (283) 42 43
    NAME <string> (284) 6 7 9 12 19
    NUMBER <number> (285) 18


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    ROOT (32)
        on left: 1
        on right: 0
    root_program <NodePtr> (33)
        on left: 2 3
        on right: 1 3
    external_declaration <NodePtr> (34)
        on left: 4 5
        on right: 2 3
    function_definition <NodePtr> (35)
        on left: 6 7
        on right: 4
    initialisation_declarator <NodePtr> (36)
        on left: 8 9
        on right: 14
    declaration_list <NodeVectorPtr> (37)
        on left: 10 11
        on right: 11 40 41
    declarator <NodePtr> (38)
        on left: 12
        on right: 8 15
    declaration <NodePtr> (39)
        on left: 13 14
        on right: 5 10 11
    parameter_declaration <NodePtr> (40)
        on left: 15
        on right: 16 17
    parameter_list <NodeVectorPtr> (41)
        on left: 16 17
        on right: 7 17
    primary_expression <NodePtr> (42)
        on left: 18 19 20
        on right: 21
    postfix_expression <NodePtr> (43)
        on left: 21
        on right: 23 29
    add_expression <NodePtr> (44)
        on left: 22
        on right: 24
    multiply_expression <NodePtr> (45)
        on left: 23
        on right: 22
    compare_expression <NodePtr> (46)
        on left: 24
        on right: 25
    equal_expression <NodePtr> (47)
        on left: 25
        on right: 26
    bitwise_expression <NodePtr> (48)
        on left: 26
        on right: 27
    logical_expression <NodePtr> (49)
        on left: 27
        on right: 28
    assignment_expression <NodePtr> (50)
        on left: 28 29
        on right: 9 29 30
    expression <NodePtr> (51)
        on left: 30
        on right: 20 43 44 45 46 47
    statement <NodePtr> (52)
        on left: 31 32 33 34 35
        on right: 36 37 45 46 47
    statement_list <NodeVectorPtr> (53)
        on left: 36 37
        on right: 37 39 41
    compound_statement <NodePtr> (54)
        on left: 38 39 40 41
        on right: 6 7 32
    jump_statement <NodePtr> (55)
        on left: 42 43
        on right: 31
    expression_statement <NodePtr> (56)
        on left: 44
        on right: 33
    condition_statement <NodePtr> (57)
        on left: 45 46
        on right: 34
    iteration_statement <NodePtr> (58)
        on left: 47
        on right: 35
    type_specifier <string> (59)
        on left: 48 49
        on right: 6 7 13 14 15


State 0

    0 $accept: . ROOT $end

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    ROOT                  go to state 3
    root_program          go to state 4
    external_declaration  go to state 5
    function_definition   go to state 6
    declaration           go to state 7
    type_specifier        go to state 8


State 1

   48 type_specifier: T_INT .

    $default  reduce using rule 48 (type_specifier)


State 2

   49 type_specifier: T_UNSIGNED .

    $default  reduce using rule 49 (type_specifier)


State 3

    0 $accept: ROOT . $end

    $end  shift, and go to state 9


State 4

    1 ROOT: root_program .
    3 root_program: root_program . external_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    $default  reduce using rule 1 (ROOT)

    external_declaration  go to state 10
    function_definition   go to state 6
    declaration           go to state 7
    type_specifier        go to state 8


State 5

    2 root_program: external_declaration .

    $default  reduce using rule 2 (root_program)


State 6

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 7

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


State 8

    6 function_definition: type_specifier . NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier . NAME T_LBRACKET parameter_list T_RBRACKET compound_statement
   13 declaration: type_specifier . SEMICOLON
   14            | type_specifier . initialisation_declarator SEMICOLON

    SEMICOLON  shift, and go to state 11
    NAME       shift, and go to state 12

    initialisation_declarator  go to state 13
    declarator                 go to state 14


State 9

    0 $accept: ROOT $end .

    $default  accept


State 10

    3 root_program: root_program external_declaration .

    $default  reduce using rule 3 (root_program)


State 11

   13 declaration: type_specifier SEMICOLON .

    $default  reduce using rule 13 (declaration)


State 12

    6 function_definition: type_specifier NAME . T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME . T_LBRACKET parameter_list T_RBRACKET compound_statement
    9 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12 declarator: NAME .

    T_ASSIGN    shift, and go to state 15
    T_LBRACKET  shift, and go to state 16

    $default  reduce using rule 12 (declarator)


State 13

   14 declaration: type_specifier initialisation_declarator . SEMICOLON

    SEMICOLON  shift, and go to state 17


State 14

    8 initialisation_declarator: declarator .

    $default  reduce using rule 8 (initialisation_declarator)


State 15

    9 initialisation_declarator: NAME T_ASSIGN . assignment_expression

    T_LBRACKET  shift, and go to state 18
    NAME        shift, and go to state 19
    NUMBER      shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 29


State 16

    6 function_definition: type_specifier NAME T_LBRACKET . T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET . parameter_list T_RBRACKET compound_statement

    T_RBRACKET  shift, and go to state 30
    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    parameter_declaration  go to state 31
    parameter_list         go to state 32
    type_specifier         go to state 33


State 17

   14 declaration: type_specifier initialisation_declarator SEMICOLON .

    $default  reduce using rule 14 (declaration)


State 18

   20 primary_expression: T_LBRACKET . expression T_RBRACKET

    T_LBRACKET  shift, and go to state 18
    NAME        shift, and go to state 19
    NUMBER      shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 35


State 19

   19 primary_expression: NAME .

    $default  reduce using rule 19 (primary_expression)


State 20

   18 primary_expression: NUMBER .

    $default  reduce using rule 18 (primary_expression)


State 21

   21 postfix_expression: primary_expression .

    $default  reduce using rule 21 (postfix_expression)


State 22

   23 multiply_expression: postfix_expression .
   29 assignment_expression: postfix_expression . T_ASSIGN assignment_expression

    T_ASSIGN  shift, and go to state 36

    $default  reduce using rule 23 (multiply_expression)


State 23

   24 compare_expression: add_expression .

    $default  reduce using rule 24 (compare_expression)


State 24

   22 add_expression: multiply_expression .

    $default  reduce using rule 22 (add_expression)


State 25

   25 equal_expression: compare_expression .

    $default  reduce using rule 25 (equal_expression)


State 26

   26 bitwise_expression: equal_expression .

    $default  reduce using rule 26 (bitwise_expression)


State 27

   27 logical_expression: bitwise_expression .

    $default  reduce using rule 27 (logical_expression)


State 28

   28 assignment_expression: logical_expression .

    $default  reduce using rule 28 (assignment_expression)


State 29

    9 initialisation_declarator: NAME T_ASSIGN assignment_expression .

    $default  reduce using rule 9 (initialisation_declarator)


State 30

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET . compound_statement

    CUR_LBRACKET  shift, and go to state 37

    compound_statement  go to state 38


State 31

   16 parameter_list: parameter_declaration .

    $default  reduce using rule 16 (parameter_list)


State 32

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list . T_RBRACKET compound_statement
   17 parameter_list: parameter_list . COMMA parameter_declaration

    T_RBRACKET  shift, and go to state 39
    COMMA       shift, and go to state 40


State 33

   15 parameter_declaration: type_specifier . declarator

    NAME  shift, and go to state 41

    declarator  go to state 42


State 34

   30 expression: assignment_expression .

    $default  reduce using rule 30 (expression)


State 35

   20 primary_expression: T_LBRACKET expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 43


State 36

   29 assignment_expression: postfix_expression T_ASSIGN . assignment_expression

    T_LBRACKET  shift, and go to state 18
    NAME        shift, and go to state 19
    NUMBER      shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 44


State 37

   38 compound_statement: CUR_LBRACKET . CUR_RBRACKET
   39                   | CUR_LBRACKET . statement_list CUR_RBRACKET
   40                   | CUR_LBRACKET . declaration_list CUR_RBRACKET
   41                   | CUR_LBRACKET . declaration_list statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 18
    CUR_LBRACKET  shift, and go to state 37
    CUR_RBRACKET  shift, and go to state 45
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_IF          shift, and go to state 46
    T_WHILE       shift, and go to state 47
    T_RETURN      shift, and go to state 48
    NAME          shift, and go to state 19
    NUMBER        shift, and go to state 20

    declaration_list       go to state 49
    declaration            go to state 50
    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 51
    statement              go to state 52
    statement_list         go to state 53
    compound_statement     go to state 54
    jump_statement         go to state 55
    expression_statement   go to state 56
    condition_statement    go to state 57
    iteration_statement    go to state 58
    type_specifier         go to state 59


State 38

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement .

    $default  reduce using rule 6 (function_definition)


State 39

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET . compound_statement

    CUR_LBRACKET  shift, and go to state 37

    compound_statement  go to state 60


State 40

   17 parameter_list: parameter_list COMMA . parameter_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2

    parameter_declaration  go to state 61
    type_specifier         go to state 33


State 41

   12 declarator: NAME .

    $default  reduce using rule 12 (declarator)


State 42

   15 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 15 (parameter_declaration)


State 43

   20 primary_expression: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 20 (primary_expression)


State 44

   29 assignment_expression: postfix_expression T_ASSIGN assignment_expression .

    $default  reduce using rule 29 (assignment_expression)


State 45

   38 compound_statement: CUR_LBRACKET CUR_RBRACKET .

    $default  reduce using rule 38 (compound_statement)


State 46

   45 condition_statement: T_IF . T_LBRACKET expression T_RBRACKET statement
   46                    | T_IF . T_LBRACKET expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 62


State 47

   47 iteration_statement: T_WHILE . T_LBRACKET expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 63


State 48

   42 jump_statement: T_RETURN . SEMICOLON
   43               | T_RETURN . expression SEMICOLON

    T_LBRACKET  shift, and go to state 18
    SEMICOLON   shift, and go to state 64
    NAME        shift, and go to state 19
    NUMBER      shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 65


State 49

   11 declaration_list: declaration_list . declaration
   40 compound_statement: CUR_LBRACKET declaration_list . CUR_RBRACKET
   41                   | CUR_LBRACKET declaration_list . statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 18
    CUR_LBRACKET  shift, and go to state 37
    CUR_RBRACKET  shift, and go to state 66
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_IF          shift, and go to state 46
    T_WHILE       shift, and go to state 47
    T_RETURN      shift, and go to state 48
    NAME          shift, and go to state 19
    NUMBER        shift, and go to state 20

    declaration            go to state 67
    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 51
    statement              go to state 52
    statement_list         go to state 68
    compound_statement     go to state 54
    jump_statement         go to state 55
    expression_statement   go to state 56
    condition_statement    go to state 57
    iteration_statement    go to state 58
    type_specifier         go to state 59


State 50

   10 declaration_list: declaration .

    $default  reduce using rule 10 (declaration_list)


State 51

   44 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 52

   36 statement_list: statement .

    $default  reduce using rule 36 (statement_list)


State 53

   37 statement_list: statement_list . statement
   39 compound_statement: CUR_LBRACKET statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 18
    CUR_LBRACKET  shift, and go to state 37
    CUR_RBRACKET  shift, and go to state 70
    T_IF          shift, and go to state 46
    T_WHILE       shift, and go to state 47
    T_RETURN      shift, and go to state 48
    NAME          shift, and go to state 19
    NUMBER        shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 51
    statement              go to state 71
    compound_statement     go to state 54
    jump_statement         go to state 55
    expression_statement   go to state 56
    condition_statement    go to state 57
    iteration_statement    go to state 58


State 54

   32 statement: compound_statement .

    $default  reduce using rule 32 (statement)


State 55

   31 statement: jump_statement .

    $default  reduce using rule 31 (statement)


State 56

   33 statement: expression_statement .

    $default  reduce using rule 33 (statement)


State 57

   34 statement: condition_statement .

    $default  reduce using rule 34 (statement)


State 58

   35 statement: iteration_statement .

    $default  reduce using rule 35 (statement)


State 59

   13 declaration: type_specifier . SEMICOLON
   14            | type_specifier . initialisation_declarator SEMICOLON

    SEMICOLON  shift, and go to state 11
    NAME       shift, and go to state 72

    initialisation_declarator  go to state 13
    declarator                 go to state 14


State 60

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement .

    $default  reduce using rule 7 (function_definition)


State 61

   17 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 17 (parameter_list)


State 62

   45 condition_statement: T_IF T_LBRACKET . expression T_RBRACKET statement
   46                    | T_IF T_LBRACKET . expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 18
    NAME        shift, and go to state 19
    NUMBER      shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 73


State 63

   47 iteration_statement: T_WHILE T_LBRACKET . expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 18
    NAME        shift, and go to state 19
    NUMBER      shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 74


State 64

   42 jump_statement: T_RETURN SEMICOLON .

    $default  reduce using rule 42 (jump_statement)


State 65

   43 jump_statement: T_RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 66

   40 compound_statement: CUR_LBRACKET declaration_list CUR_RBRACKET .

    $default  reduce using rule 40 (compound_statement)


State 67

   11 declaration_list: declaration_list declaration .

    $default  reduce using rule 11 (declaration_list)


State 68

   37 statement_list: statement_list . statement
   41 compound_statement: CUR_LBRACKET declaration_list statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 18
    CUR_LBRACKET  shift, and go to state 37
    CUR_RBRACKET  shift, and go to state 76
    T_IF          shift, and go to state 46
    T_WHILE       shift, and go to state 47
    T_RETURN      shift, and go to state 48
    NAME          shift, and go to state 19
    NUMBER        shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 51
    statement              go to state 71
    compound_statement     go to state 54
    jump_statement         go to state 55
    expression_statement   go to state 56
    condition_statement    go to state 57
    iteration_statement    go to state 58


State 69

   44 expression_statement: expression SEMICOLON .

    $default  reduce using rule 44 (expression_statement)


State 70

   39 compound_statement: CUR_LBRACKET statement_list CUR_RBRACKET .

    $default  reduce using rule 39 (compound_statement)


State 71

   37 statement_list: statement_list statement .

    $default  reduce using rule 37 (statement_list)


State 72

    9 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12 declarator: NAME .

    T_ASSIGN  shift, and go to state 15

    $default  reduce using rule 12 (declarator)


State 73

   45 condition_statement: T_IF T_LBRACKET expression . T_RBRACKET statement
   46                    | T_IF T_LBRACKET expression . T_RBRACKET statement T_ELSE statement

    T_RBRACKET  shift, and go to state 77


State 74

   47 iteration_statement: T_WHILE T_LBRACKET expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 78


State 75

   43 jump_statement: T_RETURN expression SEMICOLON .

    $default  reduce using rule 43 (jump_statement)


State 76

   41 compound_statement: CUR_LBRACKET declaration_list statement_list CUR_RBRACKET .

    $default  reduce using rule 41 (compound_statement)


State 77

   45 condition_statement: T_IF T_LBRACKET expression T_RBRACKET . statement
   46                    | T_IF T_LBRACKET expression T_RBRACKET . statement T_ELSE statement

    T_LBRACKET    shift, and go to state 18
    CUR_LBRACKET  shift, and go to state 37
    T_IF          shift, and go to state 46
    T_WHILE       shift, and go to state 47
    T_RETURN      shift, and go to state 48
    NAME          shift, and go to state 19
    NUMBER        shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 51
    statement              go to state 79
    compound_statement     go to state 54
    jump_statement         go to state 55
    expression_statement   go to state 56
    condition_statement    go to state 57
    iteration_statement    go to state 58


State 78

   47 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 18
    CUR_LBRACKET  shift, and go to state 37
    T_IF          shift, and go to state 46
    T_WHILE       shift, and go to state 47
    T_RETURN      shift, and go to state 48
    NAME          shift, and go to state 19
    NUMBER        shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 51
    statement              go to state 80
    compound_statement     go to state 54
    jump_statement         go to state 55
    expression_statement   go to state 56
    condition_statement    go to state 57
    iteration_statement    go to state 58


State 79

   45 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement .
   46                    | T_IF T_LBRACKET expression T_RBRACKET statement . T_ELSE statement

    T_ELSE  shift, and go to state 81

    T_ELSE    [reduce using rule 45 (condition_statement)]
    $default  reduce using rule 45 (condition_statement)


State 80

   47 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement .

    $default  reduce using rule 47 (iteration_statement)


State 81

   46 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE . statement

    T_LBRACKET    shift, and go to state 18
    CUR_LBRACKET  shift, and go to state 37
    T_IF          shift, and go to state 46
    T_WHILE       shift, and go to state 47
    T_RETURN      shift, and go to state 48
    NAME          shift, and go to state 19
    NUMBER        shift, and go to state 20

    primary_expression     go to state 21
    postfix_expression     go to state 22
    add_expression         go to state 23
    multiply_expression    go to state 24
    compare_expression     go to state 25
    equal_expression       go to state 26
    bitwise_expression     go to state 27
    logical_expression     go to state 28
    assignment_expression  go to state 34
    expression             go to state 51
    statement              go to state 82
    compound_statement     go to state 54
    jump_statement         go to state 55
    expression_statement   go to state 56
    condition_statement    go to state 57
    iteration_statement    go to state 58


State 82

   46 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement .

    $default  reduce using rule 46 (condition_statement)
