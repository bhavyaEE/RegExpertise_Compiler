Terminals unused in grammar

    COLON


State 151 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: root_program

    2 root_program: external_declaration
    3             | root_program external_declaration

    4 external_declaration: function_definition
    5                     | declaration

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement

    8 initialisation_declarator_list: initialisation_declarator
    9                               | initialisation_declarator_list COMMA initialisation_declarator

   10 initialisation_declarator: declarator
   11                          | NAME T_ASSIGN assignment_expression
   12                          | NAME SQU_LBRACKET add_expression SQU_RBRACKET T_ASSIGN CUR_LBRACKET initialisation_list CUR_RBRACKET

   13 declaration_list: declaration
   14                 | declaration_list declaration

   15 declarator: NAME
   16           | NAME SQU_LBRACKET add_expression SQU_RBRACKET
   17           | NAME T_LBRACKET T_RBRACKET
   18           | NAME T_LBRACKET parameter_list T_RBRACKET

   19 declaration: type_specifier SEMICOLON
   20            | type_specifier initialisation_declarator_list SEMICOLON

   21 parameter_declaration: type_specifier declarator

   22 parameter_list: parameter_declaration
   23               | parameter_list COMMA parameter_declaration

   24 function_call_expression: shift_expression
   25                         | function_call_expression COMMA multiply_expression

   26 primary_expression: NUMBER
   27                   | FLOAT_NUMBER
   28                   | NAME
   29                   | NAME SQU_LBRACKET expression SQU_RBRACKET
   30                   | T_LBRACKET expression T_RBRACKET
   31                   | NAME T_LBRACKET T_RBRACKET
   32                   | NAME T_LBRACKET function_call_expression T_RBRACKET

   33 postfix_expression: primary_expression
   34                   | postfix_expression INC_OP

   35 add_expression: multiply_expression
   36               | add_expression T_PLUS multiply_expression
   37               | add_expression T_MINUS multiply_expression

   38 multiply_expression: postfix_expression
   39                    | multiply_expression T_TIMES postfix_expression
   40                    | multiply_expression T_DIVIDE postfix_expression

   41 shift_expression: add_expression
   42                 | shift_expression T_LEFT_SHIFT add_expression
   43                 | shift_expression T_RIGHT_SHIFT add_expression

   44 compare_expression: shift_expression
   45                   | compare_expression T_LESSTHAN shift_expression
   46                   | compare_expression T_LESS_EQUAL shift_expression
   47                   | compare_expression T_GREATERTHAN shift_expression
   48                   | compare_expression T_GREATER_EQUAL shift_expression

   49 equal_expression: compare_expression
   50                 | equal_expression T_EQUAL compare_expression
   51                 | equal_expression T_NOT_EQUAL compare_expression

   52 bitwise_expression: equal_expression
   53                   | bitwise_expression T_BIT_AND equal_expression
   54                   | bitwise_expression T_BIT_OR equal_expression
   55                   | bitwise_expression T_BIT_XOR equal_expression

   56 logical_expression: bitwise_expression
   57                   | logical_expression T_LOGICAL_AND bitwise_expression
   58                   | logical_expression T_LOGICAL_OR bitwise_expression

   59 assignment_expression: logical_expression
   60                      | postfix_expression T_ASSIGN assignment_expression

   61 initialisation_list: assignment_expression
   62                    | initialisation_list COMMA assignment_expression

   63 expression: assignment_expression

   64 statement: jump_statement
   65          | compound_statement
   66          | expression_statement
   67          | condition_statement
   68          | iteration_statement

   69 statement_list: statement
   70               | statement_list statement

   71 compound_statement: CUR_LBRACKET CUR_RBRACKET
   72                   | CUR_LBRACKET statement_list CUR_RBRACKET
   73                   | CUR_LBRACKET declaration_list CUR_RBRACKET
   74                   | CUR_LBRACKET declaration_list statement_list CUR_RBRACKET

   75 jump_statement: T_RETURN SEMICOLON
   76               | T_RETURN expression SEMICOLON

   77 expression_statement: expression SEMICOLON

   78 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement
   79                    | T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement

   80 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement
   81                    | T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET statement
   82                    | T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement

   83 type_specifier: T_INT
   84               | T_UNSIGNED
   85               | T_FLOAT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_ASSIGN (258) 11 12 60
    T_TIMES (259) 39
    T_DIVIDE (260) 40
    T_PLUS (261) 36
    T_MINUS (262) 37
    T_BIT_AND (263) 53
    T_BIT_OR (264) 54
    T_BIT_XOR (265) 55
    T_LOGICAL_OR (266) 58
    T_LOGICAL_AND (267) 57
    T_RIGHT_SHIFT (268) 43
    T_LEFT_SHIFT (269) 42
    T_LBRACKET (270) 6 7 17 18 30 31 32 78 79 80 81 82
    T_RBRACKET (271) 6 7 17 18 30 31 32 78 79 80 81 82
    CUR_LBRACKET (272) 12 71 72 73 74
    CUR_RBRACKET (273) 12 71 72 73 74
    SQU_LBRACKET (274) 12 16 29
    SQU_RBRACKET (275) 12 16 29
    COLON (276)
    SEMICOLON (277) 19 20 75 76 77
    COMMA (278) 9 23 25 62
    T_LESSTHAN (279) 45
    T_GREATERTHAN (280) 47
    T_LESS_EQUAL (281) 46
    T_GREATER_EQUAL (282) 48
    T_EQUAL (283) 50
    T_NOT_EQUAL (284) 51
    T_INT (285) 83
    T_UNSIGNED (286) 84
    T_FLOAT (287) 85
    T_IF (288) 78 79
    T_ELSE (289) 79
    T_WHILE (290) 80
    T_RETURN (291) 75 76
    T_FOR (292) 81 82
    INC_OP (293) 34
    NAME <string> (294) 6 7 11 12 15 16 17 18 28 29 31 32
    NUMBER <number> (295) 26
    FLOAT_NUMBER <float_num> (296) 27


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    ROOT (43)
        on left: 1
        on right: 0
    root_program <NodePtr> (44)
        on left: 2 3
        on right: 1 3
    external_declaration <NodePtr> (45)
        on left: 4 5
        on right: 2 3
    function_definition <NodePtr> (46)
        on left: 6 7
        on right: 4
    initialisation_declarator_list <NodeVectorPtr> (47)
        on left: 8 9
        on right: 9 20
    initialisation_declarator <NodePtr> (48)
        on left: 10 11 12
        on right: 8 9
    declaration_list <NodeVectorPtr> (49)
        on left: 13 14
        on right: 14 73 74
    declarator <NodePtr> (50)
        on left: 15 16 17 18
        on right: 10 21
    declaration <NodePtr> (51)
        on left: 19 20
        on right: 5 13 14
    parameter_declaration <NodePtr> (52)
        on left: 21
        on right: 22 23
    parameter_list <NodeVectorPtr> (53)
        on left: 22 23
        on right: 7 18 23
    function_call_expression <NodeVectorPtr> (54)
        on left: 24 25
        on right: 25 32
    primary_expression <NodePtr> (55)
        on left: 26 27 28 29 30 31 32
        on right: 33
    postfix_expression <NodePtr> (56)
        on left: 33 34
        on right: 34 38 39 40 60
    add_expression <NodePtr> (57)
        on left: 35 36 37
        on right: 12 16 36 37 41 42 43
    multiply_expression <NodePtr> (58)
        on left: 38 39 40
        on right: 25 35 36 37 39 40
    shift_expression <NodePtr> (59)
        on left: 41 42 43
        on right: 24 42 43 44 45 46 47 48
    compare_expression <NodePtr> (60)
        on left: 44 45 46 47 48
        on right: 45 46 47 48 49 50 51
    equal_expression <NodePtr> (61)
        on left: 49 50 51
        on right: 50 51 52 53 54 55
    bitwise_expression <NodePtr> (62)
        on left: 52 53 54 55
        on right: 53 54 55 56 57 58
    logical_expression <NodePtr> (63)
        on left: 56 57 58
        on right: 57 58 59
    assignment_expression <NodePtr> (64)
        on left: 59 60
        on right: 11 60 61 62 63
    initialisation_list <NodeVectorPtr> (65)
        on left: 61 62
        on right: 12 62
    expression <NodePtr> (66)
        on left: 63
        on right: 29 30 76 77 78 79 80 82
    statement <NodePtr> (67)
        on left: 64 65 66 67 68
        on right: 69 70 78 79 80 81 82
    statement_list <NodeVectorPtr> (68)
        on left: 69 70
        on right: 70 72 74
    compound_statement <NodePtr> (69)
        on left: 71 72 73 74
        on right: 6 7 65
    jump_statement <NodePtr> (70)
        on left: 75 76
        on right: 64
    expression_statement <NodePtr> (71)
        on left: 77
        on right: 66 81 82
    condition_statement <NodePtr> (72)
        on left: 78 79
        on right: 67
    iteration_statement <NodePtr> (73)
        on left: 80 81 82
        on right: 68
    type_specifier <string> (74)
        on left: 83 84 85
        on right: 6 7 19 20 21


State 0

    0 $accept: . ROOT $end

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2
    T_FLOAT     shift, and go to state 3

    ROOT                  go to state 4
    root_program          go to state 5
    external_declaration  go to state 6
    function_definition   go to state 7
    declaration           go to state 8
    type_specifier        go to state 9


State 1

   83 type_specifier: T_INT .

    $default  reduce using rule 83 (type_specifier)


State 2

   84 type_specifier: T_UNSIGNED .

    $default  reduce using rule 84 (type_specifier)


State 3

   85 type_specifier: T_FLOAT .

    $default  reduce using rule 85 (type_specifier)


State 4

    0 $accept: ROOT . $end

    $end  shift, and go to state 10


State 5

    1 ROOT: root_program .
    3 root_program: root_program . external_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2
    T_FLOAT     shift, and go to state 3

    $default  reduce using rule 1 (ROOT)

    external_declaration  go to state 11
    function_definition   go to state 7
    declaration           go to state 8
    type_specifier        go to state 9


State 6

    2 root_program: external_declaration .

    $default  reduce using rule 2 (root_program)


State 7

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


State 8

    5 external_declaration: declaration .

    $default  reduce using rule 5 (external_declaration)


State 9

    6 function_definition: type_specifier . NAME T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier . NAME T_LBRACKET parameter_list T_RBRACKET compound_statement
   19 declaration: type_specifier . SEMICOLON
   20            | type_specifier . initialisation_declarator_list SEMICOLON

    SEMICOLON  shift, and go to state 12
    NAME       shift, and go to state 13

    initialisation_declarator_list  go to state 14
    initialisation_declarator       go to state 15
    declarator                      go to state 16


State 10

    0 $accept: ROOT $end .

    $default  accept


State 11

    3 root_program: root_program external_declaration .

    $default  reduce using rule 3 (root_program)


State 12

   19 declaration: type_specifier SEMICOLON .

    $default  reduce using rule 19 (declaration)


State 13

    6 function_definition: type_specifier NAME . T_LBRACKET T_RBRACKET compound_statement
    7                    | type_specifier NAME . T_LBRACKET parameter_list T_RBRACKET compound_statement
   11 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12                          | NAME . SQU_LBRACKET add_expression SQU_RBRACKET T_ASSIGN CUR_LBRACKET initialisation_list CUR_RBRACKET
   15 declarator: NAME .
   16           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET
   17           | NAME . T_LBRACKET T_RBRACKET
   18           | NAME . T_LBRACKET parameter_list T_RBRACKET

    T_ASSIGN      shift, and go to state 17
    T_LBRACKET    shift, and go to state 18
    SQU_LBRACKET  shift, and go to state 19

    $default  reduce using rule 15 (declarator)


State 14

    9 initialisation_declarator_list: initialisation_declarator_list . COMMA initialisation_declarator
   20 declaration: type_specifier initialisation_declarator_list . SEMICOLON

    SEMICOLON  shift, and go to state 20
    COMMA      shift, and go to state 21


State 15

    8 initialisation_declarator_list: initialisation_declarator .

    $default  reduce using rule 8 (initialisation_declarator_list)


State 16

   10 initialisation_declarator: declarator .

    $default  reduce using rule 10 (initialisation_declarator)


State 17

   11 initialisation_declarator: NAME T_ASSIGN . assignment_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 35


State 18

    6 function_definition: type_specifier NAME T_LBRACKET . T_RBRACKET compound_statement
    7                    | type_specifier NAME T_LBRACKET . parameter_list T_RBRACKET compound_statement
   17 declarator: NAME T_LBRACKET . T_RBRACKET
   18           | NAME T_LBRACKET . parameter_list T_RBRACKET

    T_RBRACKET  shift, and go to state 36
    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2
    T_FLOAT     shift, and go to state 3

    parameter_declaration  go to state 37
    parameter_list         go to state 38
    type_specifier         go to state 39


State 19

   12 initialisation_declarator: NAME SQU_LBRACKET . add_expression SQU_RBRACKET T_ASSIGN CUR_LBRACKET initialisation_list CUR_RBRACKET
   16 declarator: NAME SQU_LBRACKET . add_expression SQU_RBRACKET

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 41
    multiply_expression  go to state 29


State 20

   20 declaration: type_specifier initialisation_declarator_list SEMICOLON .

    $default  reduce using rule 20 (declaration)


State 21

    9 initialisation_declarator_list: initialisation_declarator_list COMMA . initialisation_declarator

    NAME  shift, and go to state 42

    initialisation_declarator  go to state 43
    declarator                 go to state 16


State 22

   30 primary_expression: T_LBRACKET . expression T_RBRACKET

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 45


State 23

   28 primary_expression: NAME .
   29                   | NAME . SQU_LBRACKET expression SQU_RBRACKET
   31                   | NAME . T_LBRACKET T_RBRACKET
   32                   | NAME . T_LBRACKET function_call_expression T_RBRACKET

    T_LBRACKET    shift, and go to state 46
    SQU_LBRACKET  shift, and go to state 47

    $default  reduce using rule 28 (primary_expression)


State 24

   26 primary_expression: NUMBER .

    $default  reduce using rule 26 (primary_expression)


State 25

   27 primary_expression: FLOAT_NUMBER .

    $default  reduce using rule 27 (primary_expression)


State 26

   33 postfix_expression: primary_expression .

    $default  reduce using rule 33 (postfix_expression)


State 27

   34 postfix_expression: postfix_expression . INC_OP
   38 multiply_expression: postfix_expression .
   60 assignment_expression: postfix_expression . T_ASSIGN assignment_expression

    T_ASSIGN  shift, and go to state 48
    INC_OP    shift, and go to state 49

    $default  reduce using rule 38 (multiply_expression)


State 28

   36 add_expression: add_expression . T_PLUS multiply_expression
   37               | add_expression . T_MINUS multiply_expression
   41 shift_expression: add_expression .

    T_PLUS   shift, and go to state 50
    T_MINUS  shift, and go to state 51

    $default  reduce using rule 41 (shift_expression)


State 29

   35 add_expression: multiply_expression .
   39 multiply_expression: multiply_expression . T_TIMES postfix_expression
   40                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 52
    T_DIVIDE  shift, and go to state 53

    $default  reduce using rule 35 (add_expression)


State 30

   42 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   43                 | shift_expression . T_RIGHT_SHIFT add_expression
   44 compare_expression: shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 54
    T_LEFT_SHIFT   shift, and go to state 55

    $default  reduce using rule 44 (compare_expression)


State 31

   45 compare_expression: compare_expression . T_LESSTHAN shift_expression
   46                   | compare_expression . T_LESS_EQUAL shift_expression
   47                   | compare_expression . T_GREATERTHAN shift_expression
   48                   | compare_expression . T_GREATER_EQUAL shift_expression
   49 equal_expression: compare_expression .

    T_LESSTHAN       shift, and go to state 56
    T_GREATERTHAN    shift, and go to state 57
    T_LESS_EQUAL     shift, and go to state 58
    T_GREATER_EQUAL  shift, and go to state 59

    $default  reduce using rule 49 (equal_expression)


State 32

   50 equal_expression: equal_expression . T_EQUAL compare_expression
   51                 | equal_expression . T_NOT_EQUAL compare_expression
   52 bitwise_expression: equal_expression .

    T_EQUAL      shift, and go to state 60
    T_NOT_EQUAL  shift, and go to state 61

    $default  reduce using rule 52 (bitwise_expression)


State 33

   53 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   54                   | bitwise_expression . T_BIT_OR equal_expression
   55                   | bitwise_expression . T_BIT_XOR equal_expression
   56 logical_expression: bitwise_expression .

    T_BIT_AND  shift, and go to state 62
    T_BIT_OR   shift, and go to state 63
    T_BIT_XOR  shift, and go to state 64

    $default  reduce using rule 56 (logical_expression)


State 34

   57 logical_expression: logical_expression . T_LOGICAL_AND bitwise_expression
   58                   | logical_expression . T_LOGICAL_OR bitwise_expression
   59 assignment_expression: logical_expression .

    T_LOGICAL_OR   shift, and go to state 65
    T_LOGICAL_AND  shift, and go to state 66

    $default  reduce using rule 59 (assignment_expression)


State 35

   11 initialisation_declarator: NAME T_ASSIGN assignment_expression .

    $default  reduce using rule 11 (initialisation_declarator)


State 36

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET . compound_statement
   17 declarator: NAME T_LBRACKET T_RBRACKET .

    CUR_LBRACKET  shift, and go to state 67

    $default  reduce using rule 17 (declarator)

    compound_statement  go to state 68


State 37

   22 parameter_list: parameter_declaration .

    $default  reduce using rule 22 (parameter_list)


State 38

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list . T_RBRACKET compound_statement
   18 declarator: NAME T_LBRACKET parameter_list . T_RBRACKET
   23 parameter_list: parameter_list . COMMA parameter_declaration

    T_RBRACKET  shift, and go to state 69
    COMMA       shift, and go to state 70


State 39

   21 parameter_declaration: type_specifier . declarator

    NAME  shift, and go to state 71

    declarator  go to state 72


State 40

   34 postfix_expression: postfix_expression . INC_OP
   38 multiply_expression: postfix_expression .

    INC_OP  shift, and go to state 49

    $default  reduce using rule 38 (multiply_expression)


State 41

   12 initialisation_declarator: NAME SQU_LBRACKET add_expression . SQU_RBRACKET T_ASSIGN CUR_LBRACKET initialisation_list CUR_RBRACKET
   16 declarator: NAME SQU_LBRACKET add_expression . SQU_RBRACKET
   36 add_expression: add_expression . T_PLUS multiply_expression
   37               | add_expression . T_MINUS multiply_expression

    T_PLUS        shift, and go to state 50
    T_MINUS       shift, and go to state 51
    SQU_RBRACKET  shift, and go to state 73


State 42

   11 initialisation_declarator: NAME . T_ASSIGN assignment_expression
   12                          | NAME . SQU_LBRACKET add_expression SQU_RBRACKET T_ASSIGN CUR_LBRACKET initialisation_list CUR_RBRACKET
   15 declarator: NAME .
   16           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET
   17           | NAME . T_LBRACKET T_RBRACKET
   18           | NAME . T_LBRACKET parameter_list T_RBRACKET

    T_ASSIGN      shift, and go to state 17
    T_LBRACKET    shift, and go to state 74
    SQU_LBRACKET  shift, and go to state 19

    $default  reduce using rule 15 (declarator)


State 43

    9 initialisation_declarator_list: initialisation_declarator_list COMMA initialisation_declarator .

    $default  reduce using rule 9 (initialisation_declarator_list)


State 44

   63 expression: assignment_expression .

    $default  reduce using rule 63 (expression)


State 45

   30 primary_expression: T_LBRACKET expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 75


State 46

   31 primary_expression: NAME T_LBRACKET . T_RBRACKET
   32                   | NAME T_LBRACKET . function_call_expression T_RBRACKET

    T_LBRACKET    shift, and go to state 22
    T_RBRACKET    shift, and go to state 76
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    function_call_expression  go to state 77
    primary_expression        go to state 26
    postfix_expression        go to state 40
    add_expression            go to state 28
    multiply_expression       go to state 29
    shift_expression          go to state 78


State 47

   29 primary_expression: NAME SQU_LBRACKET . expression SQU_RBRACKET

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 79


State 48

   60 assignment_expression: postfix_expression T_ASSIGN . assignment_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 80


State 49

   34 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 34 (postfix_expression)


State 50

   36 add_expression: add_expression T_PLUS . multiply_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    multiply_expression  go to state 81


State 51

   37 add_expression: add_expression T_MINUS . multiply_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    multiply_expression  go to state 82


State 52

   39 multiply_expression: multiply_expression T_TIMES . postfix_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression  go to state 26
    postfix_expression  go to state 83


State 53

   40 multiply_expression: multiply_expression T_DIVIDE . postfix_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression  go to state 26
    postfix_expression  go to state 84


State 54

   43 shift_expression: shift_expression T_RIGHT_SHIFT . add_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 85
    multiply_expression  go to state 29


State 55

   42 shift_expression: shift_expression T_LEFT_SHIFT . add_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 86
    multiply_expression  go to state 29


State 56

   45 compare_expression: compare_expression T_LESSTHAN . shift_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 87


State 57

   47 compare_expression: compare_expression T_GREATERTHAN . shift_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 88


State 58

   46 compare_expression: compare_expression T_LESS_EQUAL . shift_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 89


State 59

   48 compare_expression: compare_expression T_GREATER_EQUAL . shift_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 90


State 60

   50 equal_expression: equal_expression T_EQUAL . compare_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 30
    compare_expression   go to state 91


State 61

   51 equal_expression: equal_expression T_NOT_EQUAL . compare_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 30
    compare_expression   go to state 92


State 62

   53 bitwise_expression: bitwise_expression T_BIT_AND . equal_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 30
    compare_expression   go to state 31
    equal_expression     go to state 93


State 63

   54 bitwise_expression: bitwise_expression T_BIT_OR . equal_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 30
    compare_expression   go to state 31
    equal_expression     go to state 94


State 64

   55 bitwise_expression: bitwise_expression T_BIT_XOR . equal_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 30
    compare_expression   go to state 31
    equal_expression     go to state 95


State 65

   58 logical_expression: logical_expression T_LOGICAL_OR . bitwise_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 30
    compare_expression   go to state 31
    equal_expression     go to state 32
    bitwise_expression   go to state 96


State 66

   57 logical_expression: logical_expression T_LOGICAL_AND . bitwise_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 28
    multiply_expression  go to state 29
    shift_expression     go to state 30
    compare_expression   go to state 31
    equal_expression     go to state 32
    bitwise_expression   go to state 97


State 67

   71 compound_statement: CUR_LBRACKET . CUR_RBRACKET
   72                   | CUR_LBRACKET . statement_list CUR_RBRACKET
   73                   | CUR_LBRACKET . declaration_list CUR_RBRACKET
   74                   | CUR_LBRACKET . declaration_list statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    CUR_RBRACKET  shift, and go to state 98
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    declaration_list       go to state 103
    declaration            go to state 104
    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 106
    statement_list         go to state 107
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112
    type_specifier         go to state 113


State 68

    6 function_definition: type_specifier NAME T_LBRACKET T_RBRACKET compound_statement .

    $default  reduce using rule 6 (function_definition)


State 69

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET . compound_statement
   18 declarator: NAME T_LBRACKET parameter_list T_RBRACKET .

    CUR_LBRACKET  shift, and go to state 67

    $default  reduce using rule 18 (declarator)

    compound_statement  go to state 114


State 70

   23 parameter_list: parameter_list COMMA . parameter_declaration

    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2
    T_FLOAT     shift, and go to state 3

    parameter_declaration  go to state 115
    type_specifier         go to state 39


State 71

   15 declarator: NAME .
   16           | NAME . SQU_LBRACKET add_expression SQU_RBRACKET
   17           | NAME . T_LBRACKET T_RBRACKET
   18           | NAME . T_LBRACKET parameter_list T_RBRACKET

    T_LBRACKET    shift, and go to state 74
    SQU_LBRACKET  shift, and go to state 116

    $default  reduce using rule 15 (declarator)


State 72

   21 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 21 (parameter_declaration)


State 73

   12 initialisation_declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET . T_ASSIGN CUR_LBRACKET initialisation_list CUR_RBRACKET
   16 declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET .

    T_ASSIGN  shift, and go to state 117

    $default  reduce using rule 16 (declarator)


State 74

   17 declarator: NAME T_LBRACKET . T_RBRACKET
   18           | NAME T_LBRACKET . parameter_list T_RBRACKET

    T_RBRACKET  shift, and go to state 118
    T_INT       shift, and go to state 1
    T_UNSIGNED  shift, and go to state 2
    T_FLOAT     shift, and go to state 3

    parameter_declaration  go to state 37
    parameter_list         go to state 119
    type_specifier         go to state 39


State 75

   30 primary_expression: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 30 (primary_expression)


State 76

   31 primary_expression: NAME T_LBRACKET T_RBRACKET .

    $default  reduce using rule 31 (primary_expression)


State 77

   25 function_call_expression: function_call_expression . COMMA multiply_expression
   32 primary_expression: NAME T_LBRACKET function_call_expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 120
    COMMA       shift, and go to state 121


State 78

   24 function_call_expression: shift_expression .
   42 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   43                 | shift_expression . T_RIGHT_SHIFT add_expression

    T_RIGHT_SHIFT  shift, and go to state 54
    T_LEFT_SHIFT   shift, and go to state 55

    $default  reduce using rule 24 (function_call_expression)


State 79

   29 primary_expression: NAME SQU_LBRACKET expression . SQU_RBRACKET

    SQU_RBRACKET  shift, and go to state 122


State 80

   60 assignment_expression: postfix_expression T_ASSIGN assignment_expression .

    $default  reduce using rule 60 (assignment_expression)


State 81

   36 add_expression: add_expression T_PLUS multiply_expression .
   39 multiply_expression: multiply_expression . T_TIMES postfix_expression
   40                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 52
    T_DIVIDE  shift, and go to state 53

    $default  reduce using rule 36 (add_expression)


State 82

   37 add_expression: add_expression T_MINUS multiply_expression .
   39 multiply_expression: multiply_expression . T_TIMES postfix_expression
   40                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 52
    T_DIVIDE  shift, and go to state 53

    $default  reduce using rule 37 (add_expression)


State 83

   34 postfix_expression: postfix_expression . INC_OP
   39 multiply_expression: multiply_expression T_TIMES postfix_expression .

    INC_OP  shift, and go to state 49

    $default  reduce using rule 39 (multiply_expression)


State 84

   34 postfix_expression: postfix_expression . INC_OP
   40 multiply_expression: multiply_expression T_DIVIDE postfix_expression .

    INC_OP  shift, and go to state 49

    $default  reduce using rule 40 (multiply_expression)


State 85

   36 add_expression: add_expression . T_PLUS multiply_expression
   37               | add_expression . T_MINUS multiply_expression
   43 shift_expression: shift_expression T_RIGHT_SHIFT add_expression .

    T_PLUS   shift, and go to state 50
    T_MINUS  shift, and go to state 51

    $default  reduce using rule 43 (shift_expression)


State 86

   36 add_expression: add_expression . T_PLUS multiply_expression
   37               | add_expression . T_MINUS multiply_expression
   42 shift_expression: shift_expression T_LEFT_SHIFT add_expression .

    T_PLUS   shift, and go to state 50
    T_MINUS  shift, and go to state 51

    $default  reduce using rule 42 (shift_expression)


State 87

   42 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   43                 | shift_expression . T_RIGHT_SHIFT add_expression
   45 compare_expression: compare_expression T_LESSTHAN shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 54
    T_LEFT_SHIFT   shift, and go to state 55

    $default  reduce using rule 45 (compare_expression)


State 88

   42 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   43                 | shift_expression . T_RIGHT_SHIFT add_expression
   47 compare_expression: compare_expression T_GREATERTHAN shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 54
    T_LEFT_SHIFT   shift, and go to state 55

    $default  reduce using rule 47 (compare_expression)


State 89

   42 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   43                 | shift_expression . T_RIGHT_SHIFT add_expression
   46 compare_expression: compare_expression T_LESS_EQUAL shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 54
    T_LEFT_SHIFT   shift, and go to state 55

    $default  reduce using rule 46 (compare_expression)


State 90

   42 shift_expression: shift_expression . T_LEFT_SHIFT add_expression
   43                 | shift_expression . T_RIGHT_SHIFT add_expression
   48 compare_expression: compare_expression T_GREATER_EQUAL shift_expression .

    T_RIGHT_SHIFT  shift, and go to state 54
    T_LEFT_SHIFT   shift, and go to state 55

    $default  reduce using rule 48 (compare_expression)


State 91

   45 compare_expression: compare_expression . T_LESSTHAN shift_expression
   46                   | compare_expression . T_LESS_EQUAL shift_expression
   47                   | compare_expression . T_GREATERTHAN shift_expression
   48                   | compare_expression . T_GREATER_EQUAL shift_expression
   50 equal_expression: equal_expression T_EQUAL compare_expression .

    T_LESSTHAN       shift, and go to state 56
    T_GREATERTHAN    shift, and go to state 57
    T_LESS_EQUAL     shift, and go to state 58
    T_GREATER_EQUAL  shift, and go to state 59

    $default  reduce using rule 50 (equal_expression)


State 92

   45 compare_expression: compare_expression . T_LESSTHAN shift_expression
   46                   | compare_expression . T_LESS_EQUAL shift_expression
   47                   | compare_expression . T_GREATERTHAN shift_expression
   48                   | compare_expression . T_GREATER_EQUAL shift_expression
   51 equal_expression: equal_expression T_NOT_EQUAL compare_expression .

    T_LESSTHAN       shift, and go to state 56
    T_GREATERTHAN    shift, and go to state 57
    T_LESS_EQUAL     shift, and go to state 58
    T_GREATER_EQUAL  shift, and go to state 59

    $default  reduce using rule 51 (equal_expression)


State 93

   50 equal_expression: equal_expression . T_EQUAL compare_expression
   51                 | equal_expression . T_NOT_EQUAL compare_expression
   53 bitwise_expression: bitwise_expression T_BIT_AND equal_expression .

    T_EQUAL      shift, and go to state 60
    T_NOT_EQUAL  shift, and go to state 61

    $default  reduce using rule 53 (bitwise_expression)


State 94

   50 equal_expression: equal_expression . T_EQUAL compare_expression
   51                 | equal_expression . T_NOT_EQUAL compare_expression
   54 bitwise_expression: bitwise_expression T_BIT_OR equal_expression .

    T_EQUAL      shift, and go to state 60
    T_NOT_EQUAL  shift, and go to state 61

    $default  reduce using rule 54 (bitwise_expression)


State 95

   50 equal_expression: equal_expression . T_EQUAL compare_expression
   51                 | equal_expression . T_NOT_EQUAL compare_expression
   55 bitwise_expression: bitwise_expression T_BIT_XOR equal_expression .

    T_EQUAL      shift, and go to state 60
    T_NOT_EQUAL  shift, and go to state 61

    $default  reduce using rule 55 (bitwise_expression)


State 96

   53 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   54                   | bitwise_expression . T_BIT_OR equal_expression
   55                   | bitwise_expression . T_BIT_XOR equal_expression
   58 logical_expression: logical_expression T_LOGICAL_OR bitwise_expression .

    T_BIT_AND  shift, and go to state 62
    T_BIT_OR   shift, and go to state 63
    T_BIT_XOR  shift, and go to state 64

    $default  reduce using rule 58 (logical_expression)


State 97

   53 bitwise_expression: bitwise_expression . T_BIT_AND equal_expression
   54                   | bitwise_expression . T_BIT_OR equal_expression
   55                   | bitwise_expression . T_BIT_XOR equal_expression
   57 logical_expression: logical_expression T_LOGICAL_AND bitwise_expression .

    T_BIT_AND  shift, and go to state 62
    T_BIT_OR   shift, and go to state 63
    T_BIT_XOR  shift, and go to state 64

    $default  reduce using rule 57 (logical_expression)


State 98

   71 compound_statement: CUR_LBRACKET CUR_RBRACKET .

    $default  reduce using rule 71 (compound_statement)


State 99

   78 condition_statement: T_IF . T_LBRACKET expression T_RBRACKET statement
   79                    | T_IF . T_LBRACKET expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 123


State 100

   80 iteration_statement: T_WHILE . T_LBRACKET expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 124


State 101

   75 jump_statement: T_RETURN . SEMICOLON
   76               | T_RETURN . expression SEMICOLON

    T_LBRACKET    shift, and go to state 22
    SEMICOLON     shift, and go to state 125
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 126


State 102

   81 iteration_statement: T_FOR . T_LBRACKET expression_statement expression_statement T_RBRACKET statement
   82                    | T_FOR . T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 127


State 103

   14 declaration_list: declaration_list . declaration
   73 compound_statement: CUR_LBRACKET declaration_list . CUR_RBRACKET
   74                   | CUR_LBRACKET declaration_list . statement_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    CUR_RBRACKET  shift, and go to state 128
    T_INT         shift, and go to state 1
    T_UNSIGNED    shift, and go to state 2
    T_FLOAT       shift, and go to state 3
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    declaration            go to state 129
    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 106
    statement_list         go to state 130
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112
    type_specifier         go to state 113


State 104

   13 declaration_list: declaration .

    $default  reduce using rule 13 (declaration_list)


State 105

   77 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 106

   69 statement_list: statement .

    $default  reduce using rule 69 (statement_list)


State 107

   70 statement_list: statement_list . statement
   72 compound_statement: CUR_LBRACKET statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    CUR_RBRACKET  shift, and go to state 132
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 133
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112


State 108

   65 statement: compound_statement .

    $default  reduce using rule 65 (statement)


State 109

   64 statement: jump_statement .

    $default  reduce using rule 64 (statement)


State 110

   66 statement: expression_statement .

    $default  reduce using rule 66 (statement)


State 111

   67 statement: condition_statement .

    $default  reduce using rule 67 (statement)


State 112

   68 statement: iteration_statement .

    $default  reduce using rule 68 (statement)


State 113

   19 declaration: type_specifier . SEMICOLON
   20            | type_specifier . initialisation_declarator_list SEMICOLON

    SEMICOLON  shift, and go to state 12
    NAME       shift, and go to state 42

    initialisation_declarator_list  go to state 14
    initialisation_declarator       go to state 15
    declarator                      go to state 16


State 114

    7 function_definition: type_specifier NAME T_LBRACKET parameter_list T_RBRACKET compound_statement .

    $default  reduce using rule 7 (function_definition)


State 115

   23 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 23 (parameter_list)


State 116

   16 declarator: NAME SQU_LBRACKET . add_expression SQU_RBRACKET

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    add_expression       go to state 134
    multiply_expression  go to state 29


State 117

   12 initialisation_declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET T_ASSIGN . CUR_LBRACKET initialisation_list CUR_RBRACKET

    CUR_LBRACKET  shift, and go to state 135


State 118

   17 declarator: NAME T_LBRACKET T_RBRACKET .

    $default  reduce using rule 17 (declarator)


State 119

   18 declarator: NAME T_LBRACKET parameter_list . T_RBRACKET
   23 parameter_list: parameter_list . COMMA parameter_declaration

    T_RBRACKET  shift, and go to state 136
    COMMA       shift, and go to state 70


State 120

   32 primary_expression: NAME T_LBRACKET function_call_expression T_RBRACKET .

    $default  reduce using rule 32 (primary_expression)


State 121

   25 function_call_expression: function_call_expression COMMA . multiply_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression   go to state 26
    postfix_expression   go to state 40
    multiply_expression  go to state 137


State 122

   29 primary_expression: NAME SQU_LBRACKET expression SQU_RBRACKET .

    $default  reduce using rule 29 (primary_expression)


State 123

   78 condition_statement: T_IF T_LBRACKET . expression T_RBRACKET statement
   79                    | T_IF T_LBRACKET . expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 138


State 124

   80 iteration_statement: T_WHILE T_LBRACKET . expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 139


State 125

   75 jump_statement: T_RETURN SEMICOLON .

    $default  reduce using rule 75 (jump_statement)


State 126

   76 jump_statement: T_RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 127

   81 iteration_statement: T_FOR T_LBRACKET . expression_statement expression_statement T_RBRACKET statement
   82                    | T_FOR T_LBRACKET . expression_statement expression_statement expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    expression_statement   go to state 141


State 128

   73 compound_statement: CUR_LBRACKET declaration_list CUR_RBRACKET .

    $default  reduce using rule 73 (compound_statement)


State 129

   14 declaration_list: declaration_list declaration .

    $default  reduce using rule 14 (declaration_list)


State 130

   70 statement_list: statement_list . statement
   74 compound_statement: CUR_LBRACKET declaration_list statement_list . CUR_RBRACKET

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    CUR_RBRACKET  shift, and go to state 142
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 133
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112


State 131

   77 expression_statement: expression SEMICOLON .

    $default  reduce using rule 77 (expression_statement)


State 132

   72 compound_statement: CUR_LBRACKET statement_list CUR_RBRACKET .

    $default  reduce using rule 72 (compound_statement)


State 133

   70 statement_list: statement_list statement .

    $default  reduce using rule 70 (statement_list)


State 134

   16 declarator: NAME SQU_LBRACKET add_expression . SQU_RBRACKET
   36 add_expression: add_expression . T_PLUS multiply_expression
   37               | add_expression . T_MINUS multiply_expression

    T_PLUS        shift, and go to state 50
    T_MINUS       shift, and go to state 51
    SQU_RBRACKET  shift, and go to state 143


State 135

   12 initialisation_declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET T_ASSIGN CUR_LBRACKET . initialisation_list CUR_RBRACKET

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 144
    initialisation_list    go to state 145


State 136

   18 declarator: NAME T_LBRACKET parameter_list T_RBRACKET .

    $default  reduce using rule 18 (declarator)


State 137

   25 function_call_expression: function_call_expression COMMA multiply_expression .
   39 multiply_expression: multiply_expression . T_TIMES postfix_expression
   40                    | multiply_expression . T_DIVIDE postfix_expression

    T_TIMES   shift, and go to state 52
    T_DIVIDE  shift, and go to state 53

    $default  reduce using rule 25 (function_call_expression)


State 138

   78 condition_statement: T_IF T_LBRACKET expression . T_RBRACKET statement
   79                    | T_IF T_LBRACKET expression . T_RBRACKET statement T_ELSE statement

    T_RBRACKET  shift, and go to state 146


State 139

   80 iteration_statement: T_WHILE T_LBRACKET expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 147


State 140

   76 jump_statement: T_RETURN expression SEMICOLON .

    $default  reduce using rule 76 (jump_statement)


State 141

   81 iteration_statement: T_FOR T_LBRACKET expression_statement . expression_statement T_RBRACKET statement
   82                    | T_FOR T_LBRACKET expression_statement . expression_statement expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    expression_statement   go to state 148


State 142

   74 compound_statement: CUR_LBRACKET declaration_list statement_list CUR_RBRACKET .

    $default  reduce using rule 74 (compound_statement)


State 143

   16 declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET .

    $default  reduce using rule 16 (declarator)


State 144

   61 initialisation_list: assignment_expression .

    $default  reduce using rule 61 (initialisation_list)


State 145

   12 initialisation_declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET T_ASSIGN CUR_LBRACKET initialisation_list . CUR_RBRACKET
   62 initialisation_list: initialisation_list . COMMA assignment_expression

    CUR_RBRACKET  shift, and go to state 149
    COMMA         shift, and go to state 150


State 146

   78 condition_statement: T_IF T_LBRACKET expression T_RBRACKET . statement
   79                    | T_IF T_LBRACKET expression T_RBRACKET . statement T_ELSE statement

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 151
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112


State 147

   80 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 152
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112


State 148

   81 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement . T_RBRACKET statement
   82                    | T_FOR T_LBRACKET expression_statement expression_statement . expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 22
    T_RBRACKET    shift, and go to state 153
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 154


State 149

   12 initialisation_declarator: NAME SQU_LBRACKET add_expression SQU_RBRACKET T_ASSIGN CUR_LBRACKET initialisation_list CUR_RBRACKET .

    $default  reduce using rule 12 (initialisation_declarator)


State 150

   62 initialisation_list: initialisation_list COMMA . assignment_expression

    T_LBRACKET    shift, and go to state 22
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 155


State 151

   78 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement .
   79                    | T_IF T_LBRACKET expression T_RBRACKET statement . T_ELSE statement

    T_ELSE  shift, and go to state 156

    T_ELSE    [reduce using rule 78 (condition_statement)]
    $default  reduce using rule 78 (condition_statement)


State 152

   80 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement .

    $default  reduce using rule 80 (iteration_statement)


State 153

   81 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 157
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112


State 154

   82 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 158


State 155

   62 initialisation_list: initialisation_list COMMA assignment_expression .

    $default  reduce using rule 62 (initialisation_list)


State 156

   79 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE . statement

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 159
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112


State 157

   81 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement T_RBRACKET statement .

    $default  reduce using rule 81 (iteration_statement)


State 158

   82 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET . statement

    T_LBRACKET    shift, and go to state 22
    CUR_LBRACKET  shift, and go to state 67
    T_IF          shift, and go to state 99
    T_WHILE       shift, and go to state 100
    T_RETURN      shift, and go to state 101
    T_FOR         shift, and go to state 102
    NAME          shift, and go to state 23
    NUMBER        shift, and go to state 24
    FLOAT_NUMBER  shift, and go to state 25

    primary_expression     go to state 26
    postfix_expression     go to state 27
    add_expression         go to state 28
    multiply_expression    go to state 29
    shift_expression       go to state 30
    compare_expression     go to state 31
    equal_expression       go to state 32
    bitwise_expression     go to state 33
    logical_expression     go to state 34
    assignment_expression  go to state 44
    expression             go to state 105
    statement              go to state 160
    compound_statement     go to state 108
    jump_statement         go to state 109
    expression_statement   go to state 110
    condition_statement    go to state 111
    iteration_statement    go to state 112


State 159

   79 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement .

    $default  reduce using rule 79 (condition_statement)


State 160

   82 iteration_statement: T_FOR T_LBRACKET expression_statement expression_statement expression T_RBRACKET statement .

    $default  reduce using rule 82 (iteration_statement)
